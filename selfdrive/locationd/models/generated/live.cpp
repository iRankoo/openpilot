#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5284371152158479112) {
   out_5284371152158479112[0] = 0;
   out_5284371152158479112[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5284371152158479112[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5284371152158479112[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5284371152158479112[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5284371152158479112[5] = -sin(in_vec[1]);
   out_5284371152158479112[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5284371152158479112[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5284371152158479112[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5284371152158479112[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5284371152158479112[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5284371152158479112[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5284371152158479112[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5284371152158479112[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5284371152158479112[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5284371152158479112[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5284371152158479112[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5284371152158479112[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8878190256849491120) {
   out_8878190256849491120[0] = delta_x[0] + nom_x[0];
   out_8878190256849491120[1] = delta_x[1] + nom_x[1];
   out_8878190256849491120[2] = delta_x[2] + nom_x[2];
   out_8878190256849491120[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8878190256849491120[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8878190256849491120[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8878190256849491120[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8878190256849491120[7] = delta_x[6] + nom_x[7];
   out_8878190256849491120[8] = delta_x[7] + nom_x[8];
   out_8878190256849491120[9] = delta_x[8] + nom_x[9];
   out_8878190256849491120[10] = delta_x[9] + nom_x[10];
   out_8878190256849491120[11] = delta_x[10] + nom_x[11];
   out_8878190256849491120[12] = delta_x[11] + nom_x[12];
   out_8878190256849491120[13] = delta_x[12] + nom_x[13];
   out_8878190256849491120[14] = delta_x[13] + nom_x[14];
   out_8878190256849491120[15] = delta_x[14] + nom_x[15];
   out_8878190256849491120[16] = delta_x[15] + nom_x[16];
   out_8878190256849491120[17] = delta_x[16] + nom_x[17];
   out_8878190256849491120[18] = delta_x[17] + nom_x[18];
   out_8878190256849491120[19] = delta_x[18] + nom_x[19];
   out_8878190256849491120[20] = delta_x[19] + nom_x[20];
   out_8878190256849491120[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6398751028731537898) {
   out_6398751028731537898[0] = -nom_x[0] + true_x[0];
   out_6398751028731537898[1] = -nom_x[1] + true_x[1];
   out_6398751028731537898[2] = -nom_x[2] + true_x[2];
   out_6398751028731537898[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6398751028731537898[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6398751028731537898[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6398751028731537898[6] = -nom_x[7] + true_x[7];
   out_6398751028731537898[7] = -nom_x[8] + true_x[8];
   out_6398751028731537898[8] = -nom_x[9] + true_x[9];
   out_6398751028731537898[9] = -nom_x[10] + true_x[10];
   out_6398751028731537898[10] = -nom_x[11] + true_x[11];
   out_6398751028731537898[11] = -nom_x[12] + true_x[12];
   out_6398751028731537898[12] = -nom_x[13] + true_x[13];
   out_6398751028731537898[13] = -nom_x[14] + true_x[14];
   out_6398751028731537898[14] = -nom_x[15] + true_x[15];
   out_6398751028731537898[15] = -nom_x[16] + true_x[16];
   out_6398751028731537898[16] = -nom_x[17] + true_x[17];
   out_6398751028731537898[17] = -nom_x[18] + true_x[18];
   out_6398751028731537898[18] = -nom_x[19] + true_x[19];
   out_6398751028731537898[19] = -nom_x[20] + true_x[20];
   out_6398751028731537898[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2043043155980843567) {
   out_2043043155980843567[0] = 1.0;
   out_2043043155980843567[1] = 0;
   out_2043043155980843567[2] = 0;
   out_2043043155980843567[3] = 0;
   out_2043043155980843567[4] = 0;
   out_2043043155980843567[5] = 0;
   out_2043043155980843567[6] = 0;
   out_2043043155980843567[7] = 0;
   out_2043043155980843567[8] = 0;
   out_2043043155980843567[9] = 0;
   out_2043043155980843567[10] = 0;
   out_2043043155980843567[11] = 0;
   out_2043043155980843567[12] = 0;
   out_2043043155980843567[13] = 0;
   out_2043043155980843567[14] = 0;
   out_2043043155980843567[15] = 0;
   out_2043043155980843567[16] = 0;
   out_2043043155980843567[17] = 0;
   out_2043043155980843567[18] = 0;
   out_2043043155980843567[19] = 0;
   out_2043043155980843567[20] = 0;
   out_2043043155980843567[21] = 0;
   out_2043043155980843567[22] = 1.0;
   out_2043043155980843567[23] = 0;
   out_2043043155980843567[24] = 0;
   out_2043043155980843567[25] = 0;
   out_2043043155980843567[26] = 0;
   out_2043043155980843567[27] = 0;
   out_2043043155980843567[28] = 0;
   out_2043043155980843567[29] = 0;
   out_2043043155980843567[30] = 0;
   out_2043043155980843567[31] = 0;
   out_2043043155980843567[32] = 0;
   out_2043043155980843567[33] = 0;
   out_2043043155980843567[34] = 0;
   out_2043043155980843567[35] = 0;
   out_2043043155980843567[36] = 0;
   out_2043043155980843567[37] = 0;
   out_2043043155980843567[38] = 0;
   out_2043043155980843567[39] = 0;
   out_2043043155980843567[40] = 0;
   out_2043043155980843567[41] = 0;
   out_2043043155980843567[42] = 0;
   out_2043043155980843567[43] = 0;
   out_2043043155980843567[44] = 1.0;
   out_2043043155980843567[45] = 0;
   out_2043043155980843567[46] = 0;
   out_2043043155980843567[47] = 0;
   out_2043043155980843567[48] = 0;
   out_2043043155980843567[49] = 0;
   out_2043043155980843567[50] = 0;
   out_2043043155980843567[51] = 0;
   out_2043043155980843567[52] = 0;
   out_2043043155980843567[53] = 0;
   out_2043043155980843567[54] = 0;
   out_2043043155980843567[55] = 0;
   out_2043043155980843567[56] = 0;
   out_2043043155980843567[57] = 0;
   out_2043043155980843567[58] = 0;
   out_2043043155980843567[59] = 0;
   out_2043043155980843567[60] = 0;
   out_2043043155980843567[61] = 0;
   out_2043043155980843567[62] = 0;
   out_2043043155980843567[63] = 0;
   out_2043043155980843567[64] = 0;
   out_2043043155980843567[65] = 0;
   out_2043043155980843567[66] = -0.5*state[4];
   out_2043043155980843567[67] = -0.5*state[5];
   out_2043043155980843567[68] = -0.5*state[6];
   out_2043043155980843567[69] = 0;
   out_2043043155980843567[70] = 0;
   out_2043043155980843567[71] = 0;
   out_2043043155980843567[72] = 0;
   out_2043043155980843567[73] = 0;
   out_2043043155980843567[74] = 0;
   out_2043043155980843567[75] = 0;
   out_2043043155980843567[76] = 0;
   out_2043043155980843567[77] = 0;
   out_2043043155980843567[78] = 0;
   out_2043043155980843567[79] = 0;
   out_2043043155980843567[80] = 0;
   out_2043043155980843567[81] = 0;
   out_2043043155980843567[82] = 0;
   out_2043043155980843567[83] = 0;
   out_2043043155980843567[84] = 0;
   out_2043043155980843567[85] = 0;
   out_2043043155980843567[86] = 0;
   out_2043043155980843567[87] = 0.5*state[3];
   out_2043043155980843567[88] = 0.5*state[6];
   out_2043043155980843567[89] = -0.5*state[5];
   out_2043043155980843567[90] = 0;
   out_2043043155980843567[91] = 0;
   out_2043043155980843567[92] = 0;
   out_2043043155980843567[93] = 0;
   out_2043043155980843567[94] = 0;
   out_2043043155980843567[95] = 0;
   out_2043043155980843567[96] = 0;
   out_2043043155980843567[97] = 0;
   out_2043043155980843567[98] = 0;
   out_2043043155980843567[99] = 0;
   out_2043043155980843567[100] = 0;
   out_2043043155980843567[101] = 0;
   out_2043043155980843567[102] = 0;
   out_2043043155980843567[103] = 0;
   out_2043043155980843567[104] = 0;
   out_2043043155980843567[105] = 0;
   out_2043043155980843567[106] = 0;
   out_2043043155980843567[107] = 0;
   out_2043043155980843567[108] = -0.5*state[6];
   out_2043043155980843567[109] = 0.5*state[3];
   out_2043043155980843567[110] = 0.5*state[4];
   out_2043043155980843567[111] = 0;
   out_2043043155980843567[112] = 0;
   out_2043043155980843567[113] = 0;
   out_2043043155980843567[114] = 0;
   out_2043043155980843567[115] = 0;
   out_2043043155980843567[116] = 0;
   out_2043043155980843567[117] = 0;
   out_2043043155980843567[118] = 0;
   out_2043043155980843567[119] = 0;
   out_2043043155980843567[120] = 0;
   out_2043043155980843567[121] = 0;
   out_2043043155980843567[122] = 0;
   out_2043043155980843567[123] = 0;
   out_2043043155980843567[124] = 0;
   out_2043043155980843567[125] = 0;
   out_2043043155980843567[126] = 0;
   out_2043043155980843567[127] = 0;
   out_2043043155980843567[128] = 0;
   out_2043043155980843567[129] = 0.5*state[5];
   out_2043043155980843567[130] = -0.5*state[4];
   out_2043043155980843567[131] = 0.5*state[3];
   out_2043043155980843567[132] = 0;
   out_2043043155980843567[133] = 0;
   out_2043043155980843567[134] = 0;
   out_2043043155980843567[135] = 0;
   out_2043043155980843567[136] = 0;
   out_2043043155980843567[137] = 0;
   out_2043043155980843567[138] = 0;
   out_2043043155980843567[139] = 0;
   out_2043043155980843567[140] = 0;
   out_2043043155980843567[141] = 0;
   out_2043043155980843567[142] = 0;
   out_2043043155980843567[143] = 0;
   out_2043043155980843567[144] = 0;
   out_2043043155980843567[145] = 0;
   out_2043043155980843567[146] = 0;
   out_2043043155980843567[147] = 0;
   out_2043043155980843567[148] = 0;
   out_2043043155980843567[149] = 0;
   out_2043043155980843567[150] = 0;
   out_2043043155980843567[151] = 0;
   out_2043043155980843567[152] = 0;
   out_2043043155980843567[153] = 1.0;
   out_2043043155980843567[154] = 0;
   out_2043043155980843567[155] = 0;
   out_2043043155980843567[156] = 0;
   out_2043043155980843567[157] = 0;
   out_2043043155980843567[158] = 0;
   out_2043043155980843567[159] = 0;
   out_2043043155980843567[160] = 0;
   out_2043043155980843567[161] = 0;
   out_2043043155980843567[162] = 0;
   out_2043043155980843567[163] = 0;
   out_2043043155980843567[164] = 0;
   out_2043043155980843567[165] = 0;
   out_2043043155980843567[166] = 0;
   out_2043043155980843567[167] = 0;
   out_2043043155980843567[168] = 0;
   out_2043043155980843567[169] = 0;
   out_2043043155980843567[170] = 0;
   out_2043043155980843567[171] = 0;
   out_2043043155980843567[172] = 0;
   out_2043043155980843567[173] = 0;
   out_2043043155980843567[174] = 0;
   out_2043043155980843567[175] = 1.0;
   out_2043043155980843567[176] = 0;
   out_2043043155980843567[177] = 0;
   out_2043043155980843567[178] = 0;
   out_2043043155980843567[179] = 0;
   out_2043043155980843567[180] = 0;
   out_2043043155980843567[181] = 0;
   out_2043043155980843567[182] = 0;
   out_2043043155980843567[183] = 0;
   out_2043043155980843567[184] = 0;
   out_2043043155980843567[185] = 0;
   out_2043043155980843567[186] = 0;
   out_2043043155980843567[187] = 0;
   out_2043043155980843567[188] = 0;
   out_2043043155980843567[189] = 0;
   out_2043043155980843567[190] = 0;
   out_2043043155980843567[191] = 0;
   out_2043043155980843567[192] = 0;
   out_2043043155980843567[193] = 0;
   out_2043043155980843567[194] = 0;
   out_2043043155980843567[195] = 0;
   out_2043043155980843567[196] = 0;
   out_2043043155980843567[197] = 1.0;
   out_2043043155980843567[198] = 0;
   out_2043043155980843567[199] = 0;
   out_2043043155980843567[200] = 0;
   out_2043043155980843567[201] = 0;
   out_2043043155980843567[202] = 0;
   out_2043043155980843567[203] = 0;
   out_2043043155980843567[204] = 0;
   out_2043043155980843567[205] = 0;
   out_2043043155980843567[206] = 0;
   out_2043043155980843567[207] = 0;
   out_2043043155980843567[208] = 0;
   out_2043043155980843567[209] = 0;
   out_2043043155980843567[210] = 0;
   out_2043043155980843567[211] = 0;
   out_2043043155980843567[212] = 0;
   out_2043043155980843567[213] = 0;
   out_2043043155980843567[214] = 0;
   out_2043043155980843567[215] = 0;
   out_2043043155980843567[216] = 0;
   out_2043043155980843567[217] = 0;
   out_2043043155980843567[218] = 0;
   out_2043043155980843567[219] = 1.0;
   out_2043043155980843567[220] = 0;
   out_2043043155980843567[221] = 0;
   out_2043043155980843567[222] = 0;
   out_2043043155980843567[223] = 0;
   out_2043043155980843567[224] = 0;
   out_2043043155980843567[225] = 0;
   out_2043043155980843567[226] = 0;
   out_2043043155980843567[227] = 0;
   out_2043043155980843567[228] = 0;
   out_2043043155980843567[229] = 0;
   out_2043043155980843567[230] = 0;
   out_2043043155980843567[231] = 0;
   out_2043043155980843567[232] = 0;
   out_2043043155980843567[233] = 0;
   out_2043043155980843567[234] = 0;
   out_2043043155980843567[235] = 0;
   out_2043043155980843567[236] = 0;
   out_2043043155980843567[237] = 0;
   out_2043043155980843567[238] = 0;
   out_2043043155980843567[239] = 0;
   out_2043043155980843567[240] = 0;
   out_2043043155980843567[241] = 1.0;
   out_2043043155980843567[242] = 0;
   out_2043043155980843567[243] = 0;
   out_2043043155980843567[244] = 0;
   out_2043043155980843567[245] = 0;
   out_2043043155980843567[246] = 0;
   out_2043043155980843567[247] = 0;
   out_2043043155980843567[248] = 0;
   out_2043043155980843567[249] = 0;
   out_2043043155980843567[250] = 0;
   out_2043043155980843567[251] = 0;
   out_2043043155980843567[252] = 0;
   out_2043043155980843567[253] = 0;
   out_2043043155980843567[254] = 0;
   out_2043043155980843567[255] = 0;
   out_2043043155980843567[256] = 0;
   out_2043043155980843567[257] = 0;
   out_2043043155980843567[258] = 0;
   out_2043043155980843567[259] = 0;
   out_2043043155980843567[260] = 0;
   out_2043043155980843567[261] = 0;
   out_2043043155980843567[262] = 0;
   out_2043043155980843567[263] = 1.0;
   out_2043043155980843567[264] = 0;
   out_2043043155980843567[265] = 0;
   out_2043043155980843567[266] = 0;
   out_2043043155980843567[267] = 0;
   out_2043043155980843567[268] = 0;
   out_2043043155980843567[269] = 0;
   out_2043043155980843567[270] = 0;
   out_2043043155980843567[271] = 0;
   out_2043043155980843567[272] = 0;
   out_2043043155980843567[273] = 0;
   out_2043043155980843567[274] = 0;
   out_2043043155980843567[275] = 0;
   out_2043043155980843567[276] = 0;
   out_2043043155980843567[277] = 0;
   out_2043043155980843567[278] = 0;
   out_2043043155980843567[279] = 0;
   out_2043043155980843567[280] = 0;
   out_2043043155980843567[281] = 0;
   out_2043043155980843567[282] = 0;
   out_2043043155980843567[283] = 0;
   out_2043043155980843567[284] = 0;
   out_2043043155980843567[285] = 1.0;
   out_2043043155980843567[286] = 0;
   out_2043043155980843567[287] = 0;
   out_2043043155980843567[288] = 0;
   out_2043043155980843567[289] = 0;
   out_2043043155980843567[290] = 0;
   out_2043043155980843567[291] = 0;
   out_2043043155980843567[292] = 0;
   out_2043043155980843567[293] = 0;
   out_2043043155980843567[294] = 0;
   out_2043043155980843567[295] = 0;
   out_2043043155980843567[296] = 0;
   out_2043043155980843567[297] = 0;
   out_2043043155980843567[298] = 0;
   out_2043043155980843567[299] = 0;
   out_2043043155980843567[300] = 0;
   out_2043043155980843567[301] = 0;
   out_2043043155980843567[302] = 0;
   out_2043043155980843567[303] = 0;
   out_2043043155980843567[304] = 0;
   out_2043043155980843567[305] = 0;
   out_2043043155980843567[306] = 0;
   out_2043043155980843567[307] = 1.0;
   out_2043043155980843567[308] = 0;
   out_2043043155980843567[309] = 0;
   out_2043043155980843567[310] = 0;
   out_2043043155980843567[311] = 0;
   out_2043043155980843567[312] = 0;
   out_2043043155980843567[313] = 0;
   out_2043043155980843567[314] = 0;
   out_2043043155980843567[315] = 0;
   out_2043043155980843567[316] = 0;
   out_2043043155980843567[317] = 0;
   out_2043043155980843567[318] = 0;
   out_2043043155980843567[319] = 0;
   out_2043043155980843567[320] = 0;
   out_2043043155980843567[321] = 0;
   out_2043043155980843567[322] = 0;
   out_2043043155980843567[323] = 0;
   out_2043043155980843567[324] = 0;
   out_2043043155980843567[325] = 0;
   out_2043043155980843567[326] = 0;
   out_2043043155980843567[327] = 0;
   out_2043043155980843567[328] = 0;
   out_2043043155980843567[329] = 1.0;
   out_2043043155980843567[330] = 0;
   out_2043043155980843567[331] = 0;
   out_2043043155980843567[332] = 0;
   out_2043043155980843567[333] = 0;
   out_2043043155980843567[334] = 0;
   out_2043043155980843567[335] = 0;
   out_2043043155980843567[336] = 0;
   out_2043043155980843567[337] = 0;
   out_2043043155980843567[338] = 0;
   out_2043043155980843567[339] = 0;
   out_2043043155980843567[340] = 0;
   out_2043043155980843567[341] = 0;
   out_2043043155980843567[342] = 0;
   out_2043043155980843567[343] = 0;
   out_2043043155980843567[344] = 0;
   out_2043043155980843567[345] = 0;
   out_2043043155980843567[346] = 0;
   out_2043043155980843567[347] = 0;
   out_2043043155980843567[348] = 0;
   out_2043043155980843567[349] = 0;
   out_2043043155980843567[350] = 0;
   out_2043043155980843567[351] = 1.0;
   out_2043043155980843567[352] = 0;
   out_2043043155980843567[353] = 0;
   out_2043043155980843567[354] = 0;
   out_2043043155980843567[355] = 0;
   out_2043043155980843567[356] = 0;
   out_2043043155980843567[357] = 0;
   out_2043043155980843567[358] = 0;
   out_2043043155980843567[359] = 0;
   out_2043043155980843567[360] = 0;
   out_2043043155980843567[361] = 0;
   out_2043043155980843567[362] = 0;
   out_2043043155980843567[363] = 0;
   out_2043043155980843567[364] = 0;
   out_2043043155980843567[365] = 0;
   out_2043043155980843567[366] = 0;
   out_2043043155980843567[367] = 0;
   out_2043043155980843567[368] = 0;
   out_2043043155980843567[369] = 0;
   out_2043043155980843567[370] = 0;
   out_2043043155980843567[371] = 0;
   out_2043043155980843567[372] = 0;
   out_2043043155980843567[373] = 1.0;
   out_2043043155980843567[374] = 0;
   out_2043043155980843567[375] = 0;
   out_2043043155980843567[376] = 0;
   out_2043043155980843567[377] = 0;
   out_2043043155980843567[378] = 0;
   out_2043043155980843567[379] = 0;
   out_2043043155980843567[380] = 0;
   out_2043043155980843567[381] = 0;
   out_2043043155980843567[382] = 0;
   out_2043043155980843567[383] = 0;
   out_2043043155980843567[384] = 0;
   out_2043043155980843567[385] = 0;
   out_2043043155980843567[386] = 0;
   out_2043043155980843567[387] = 0;
   out_2043043155980843567[388] = 0;
   out_2043043155980843567[389] = 0;
   out_2043043155980843567[390] = 0;
   out_2043043155980843567[391] = 0;
   out_2043043155980843567[392] = 0;
   out_2043043155980843567[393] = 0;
   out_2043043155980843567[394] = 0;
   out_2043043155980843567[395] = 1.0;
   out_2043043155980843567[396] = 0;
   out_2043043155980843567[397] = 0;
   out_2043043155980843567[398] = 0;
   out_2043043155980843567[399] = 0;
   out_2043043155980843567[400] = 0;
   out_2043043155980843567[401] = 0;
   out_2043043155980843567[402] = 0;
   out_2043043155980843567[403] = 0;
   out_2043043155980843567[404] = 0;
   out_2043043155980843567[405] = 0;
   out_2043043155980843567[406] = 0;
   out_2043043155980843567[407] = 0;
   out_2043043155980843567[408] = 0;
   out_2043043155980843567[409] = 0;
   out_2043043155980843567[410] = 0;
   out_2043043155980843567[411] = 0;
   out_2043043155980843567[412] = 0;
   out_2043043155980843567[413] = 0;
   out_2043043155980843567[414] = 0;
   out_2043043155980843567[415] = 0;
   out_2043043155980843567[416] = 0;
   out_2043043155980843567[417] = 1.0;
   out_2043043155980843567[418] = 0;
   out_2043043155980843567[419] = 0;
   out_2043043155980843567[420] = 0;
   out_2043043155980843567[421] = 0;
   out_2043043155980843567[422] = 0;
   out_2043043155980843567[423] = 0;
   out_2043043155980843567[424] = 0;
   out_2043043155980843567[425] = 0;
   out_2043043155980843567[426] = 0;
   out_2043043155980843567[427] = 0;
   out_2043043155980843567[428] = 0;
   out_2043043155980843567[429] = 0;
   out_2043043155980843567[430] = 0;
   out_2043043155980843567[431] = 0;
   out_2043043155980843567[432] = 0;
   out_2043043155980843567[433] = 0;
   out_2043043155980843567[434] = 0;
   out_2043043155980843567[435] = 0;
   out_2043043155980843567[436] = 0;
   out_2043043155980843567[437] = 0;
   out_2043043155980843567[438] = 0;
   out_2043043155980843567[439] = 1.0;
   out_2043043155980843567[440] = 0;
   out_2043043155980843567[441] = 0;
   out_2043043155980843567[442] = 0;
   out_2043043155980843567[443] = 0;
   out_2043043155980843567[444] = 0;
   out_2043043155980843567[445] = 0;
   out_2043043155980843567[446] = 0;
   out_2043043155980843567[447] = 0;
   out_2043043155980843567[448] = 0;
   out_2043043155980843567[449] = 0;
   out_2043043155980843567[450] = 0;
   out_2043043155980843567[451] = 0;
   out_2043043155980843567[452] = 0;
   out_2043043155980843567[453] = 0;
   out_2043043155980843567[454] = 0;
   out_2043043155980843567[455] = 0;
   out_2043043155980843567[456] = 0;
   out_2043043155980843567[457] = 0;
   out_2043043155980843567[458] = 0;
   out_2043043155980843567[459] = 0;
   out_2043043155980843567[460] = 0;
   out_2043043155980843567[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2010583831986639410) {
   out_2010583831986639410[0] = dt*state[7] + state[0];
   out_2010583831986639410[1] = dt*state[8] + state[1];
   out_2010583831986639410[2] = dt*state[9] + state[2];
   out_2010583831986639410[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2010583831986639410[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2010583831986639410[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2010583831986639410[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2010583831986639410[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2010583831986639410[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2010583831986639410[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2010583831986639410[10] = state[10];
   out_2010583831986639410[11] = state[11];
   out_2010583831986639410[12] = state[12];
   out_2010583831986639410[13] = state[13];
   out_2010583831986639410[14] = state[14];
   out_2010583831986639410[15] = state[15];
   out_2010583831986639410[16] = state[16];
   out_2010583831986639410[17] = state[17];
   out_2010583831986639410[18] = state[18];
   out_2010583831986639410[19] = state[19];
   out_2010583831986639410[20] = state[20];
   out_2010583831986639410[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6122016632954703737) {
   out_6122016632954703737[0] = 1;
   out_6122016632954703737[1] = 0;
   out_6122016632954703737[2] = 0;
   out_6122016632954703737[3] = 0;
   out_6122016632954703737[4] = 0;
   out_6122016632954703737[5] = 0;
   out_6122016632954703737[6] = dt;
   out_6122016632954703737[7] = 0;
   out_6122016632954703737[8] = 0;
   out_6122016632954703737[9] = 0;
   out_6122016632954703737[10] = 0;
   out_6122016632954703737[11] = 0;
   out_6122016632954703737[12] = 0;
   out_6122016632954703737[13] = 0;
   out_6122016632954703737[14] = 0;
   out_6122016632954703737[15] = 0;
   out_6122016632954703737[16] = 0;
   out_6122016632954703737[17] = 0;
   out_6122016632954703737[18] = 0;
   out_6122016632954703737[19] = 0;
   out_6122016632954703737[20] = 0;
   out_6122016632954703737[21] = 0;
   out_6122016632954703737[22] = 1;
   out_6122016632954703737[23] = 0;
   out_6122016632954703737[24] = 0;
   out_6122016632954703737[25] = 0;
   out_6122016632954703737[26] = 0;
   out_6122016632954703737[27] = 0;
   out_6122016632954703737[28] = dt;
   out_6122016632954703737[29] = 0;
   out_6122016632954703737[30] = 0;
   out_6122016632954703737[31] = 0;
   out_6122016632954703737[32] = 0;
   out_6122016632954703737[33] = 0;
   out_6122016632954703737[34] = 0;
   out_6122016632954703737[35] = 0;
   out_6122016632954703737[36] = 0;
   out_6122016632954703737[37] = 0;
   out_6122016632954703737[38] = 0;
   out_6122016632954703737[39] = 0;
   out_6122016632954703737[40] = 0;
   out_6122016632954703737[41] = 0;
   out_6122016632954703737[42] = 0;
   out_6122016632954703737[43] = 0;
   out_6122016632954703737[44] = 1;
   out_6122016632954703737[45] = 0;
   out_6122016632954703737[46] = 0;
   out_6122016632954703737[47] = 0;
   out_6122016632954703737[48] = 0;
   out_6122016632954703737[49] = 0;
   out_6122016632954703737[50] = dt;
   out_6122016632954703737[51] = 0;
   out_6122016632954703737[52] = 0;
   out_6122016632954703737[53] = 0;
   out_6122016632954703737[54] = 0;
   out_6122016632954703737[55] = 0;
   out_6122016632954703737[56] = 0;
   out_6122016632954703737[57] = 0;
   out_6122016632954703737[58] = 0;
   out_6122016632954703737[59] = 0;
   out_6122016632954703737[60] = 0;
   out_6122016632954703737[61] = 0;
   out_6122016632954703737[62] = 0;
   out_6122016632954703737[63] = 0;
   out_6122016632954703737[64] = 0;
   out_6122016632954703737[65] = 0;
   out_6122016632954703737[66] = 1;
   out_6122016632954703737[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6122016632954703737[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6122016632954703737[69] = 0;
   out_6122016632954703737[70] = 0;
   out_6122016632954703737[71] = 0;
   out_6122016632954703737[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6122016632954703737[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6122016632954703737[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6122016632954703737[75] = 0;
   out_6122016632954703737[76] = 0;
   out_6122016632954703737[77] = 0;
   out_6122016632954703737[78] = 0;
   out_6122016632954703737[79] = 0;
   out_6122016632954703737[80] = 0;
   out_6122016632954703737[81] = 0;
   out_6122016632954703737[82] = 0;
   out_6122016632954703737[83] = 0;
   out_6122016632954703737[84] = 0;
   out_6122016632954703737[85] = 0;
   out_6122016632954703737[86] = 0;
   out_6122016632954703737[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6122016632954703737[88] = 1;
   out_6122016632954703737[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6122016632954703737[90] = 0;
   out_6122016632954703737[91] = 0;
   out_6122016632954703737[92] = 0;
   out_6122016632954703737[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6122016632954703737[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6122016632954703737[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6122016632954703737[96] = 0;
   out_6122016632954703737[97] = 0;
   out_6122016632954703737[98] = 0;
   out_6122016632954703737[99] = 0;
   out_6122016632954703737[100] = 0;
   out_6122016632954703737[101] = 0;
   out_6122016632954703737[102] = 0;
   out_6122016632954703737[103] = 0;
   out_6122016632954703737[104] = 0;
   out_6122016632954703737[105] = 0;
   out_6122016632954703737[106] = 0;
   out_6122016632954703737[107] = 0;
   out_6122016632954703737[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6122016632954703737[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6122016632954703737[110] = 1;
   out_6122016632954703737[111] = 0;
   out_6122016632954703737[112] = 0;
   out_6122016632954703737[113] = 0;
   out_6122016632954703737[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6122016632954703737[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6122016632954703737[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6122016632954703737[117] = 0;
   out_6122016632954703737[118] = 0;
   out_6122016632954703737[119] = 0;
   out_6122016632954703737[120] = 0;
   out_6122016632954703737[121] = 0;
   out_6122016632954703737[122] = 0;
   out_6122016632954703737[123] = 0;
   out_6122016632954703737[124] = 0;
   out_6122016632954703737[125] = 0;
   out_6122016632954703737[126] = 0;
   out_6122016632954703737[127] = 0;
   out_6122016632954703737[128] = 0;
   out_6122016632954703737[129] = 0;
   out_6122016632954703737[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6122016632954703737[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6122016632954703737[132] = 1;
   out_6122016632954703737[133] = 0;
   out_6122016632954703737[134] = 0;
   out_6122016632954703737[135] = 0;
   out_6122016632954703737[136] = 0;
   out_6122016632954703737[137] = 0;
   out_6122016632954703737[138] = 0;
   out_6122016632954703737[139] = 0;
   out_6122016632954703737[140] = 0;
   out_6122016632954703737[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6122016632954703737[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6122016632954703737[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6122016632954703737[144] = 0;
   out_6122016632954703737[145] = 0;
   out_6122016632954703737[146] = 0;
   out_6122016632954703737[147] = 0;
   out_6122016632954703737[148] = 0;
   out_6122016632954703737[149] = 0;
   out_6122016632954703737[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6122016632954703737[151] = 0;
   out_6122016632954703737[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6122016632954703737[153] = 0;
   out_6122016632954703737[154] = 1;
   out_6122016632954703737[155] = 0;
   out_6122016632954703737[156] = 0;
   out_6122016632954703737[157] = 0;
   out_6122016632954703737[158] = 0;
   out_6122016632954703737[159] = 0;
   out_6122016632954703737[160] = 0;
   out_6122016632954703737[161] = 0;
   out_6122016632954703737[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6122016632954703737[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6122016632954703737[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6122016632954703737[165] = 0;
   out_6122016632954703737[166] = 0;
   out_6122016632954703737[167] = 0;
   out_6122016632954703737[168] = 0;
   out_6122016632954703737[169] = 0;
   out_6122016632954703737[170] = 0;
   out_6122016632954703737[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6122016632954703737[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6122016632954703737[173] = 0;
   out_6122016632954703737[174] = 0;
   out_6122016632954703737[175] = 0;
   out_6122016632954703737[176] = 1;
   out_6122016632954703737[177] = 0;
   out_6122016632954703737[178] = 0;
   out_6122016632954703737[179] = 0;
   out_6122016632954703737[180] = 0;
   out_6122016632954703737[181] = 0;
   out_6122016632954703737[182] = 0;
   out_6122016632954703737[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6122016632954703737[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6122016632954703737[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6122016632954703737[186] = 0;
   out_6122016632954703737[187] = 0;
   out_6122016632954703737[188] = 0;
   out_6122016632954703737[189] = 0;
   out_6122016632954703737[190] = 0;
   out_6122016632954703737[191] = 0;
   out_6122016632954703737[192] = 0;
   out_6122016632954703737[193] = 0;
   out_6122016632954703737[194] = 0;
   out_6122016632954703737[195] = 0;
   out_6122016632954703737[196] = 0;
   out_6122016632954703737[197] = 0;
   out_6122016632954703737[198] = 1;
   out_6122016632954703737[199] = 0;
   out_6122016632954703737[200] = 0;
   out_6122016632954703737[201] = 0;
   out_6122016632954703737[202] = 0;
   out_6122016632954703737[203] = 0;
   out_6122016632954703737[204] = 0;
   out_6122016632954703737[205] = 0;
   out_6122016632954703737[206] = 0;
   out_6122016632954703737[207] = 0;
   out_6122016632954703737[208] = 0;
   out_6122016632954703737[209] = 0;
   out_6122016632954703737[210] = 0;
   out_6122016632954703737[211] = 0;
   out_6122016632954703737[212] = 0;
   out_6122016632954703737[213] = 0;
   out_6122016632954703737[214] = 0;
   out_6122016632954703737[215] = 0;
   out_6122016632954703737[216] = 0;
   out_6122016632954703737[217] = 0;
   out_6122016632954703737[218] = 0;
   out_6122016632954703737[219] = 0;
   out_6122016632954703737[220] = 1;
   out_6122016632954703737[221] = 0;
   out_6122016632954703737[222] = 0;
   out_6122016632954703737[223] = 0;
   out_6122016632954703737[224] = 0;
   out_6122016632954703737[225] = 0;
   out_6122016632954703737[226] = 0;
   out_6122016632954703737[227] = 0;
   out_6122016632954703737[228] = 0;
   out_6122016632954703737[229] = 0;
   out_6122016632954703737[230] = 0;
   out_6122016632954703737[231] = 0;
   out_6122016632954703737[232] = 0;
   out_6122016632954703737[233] = 0;
   out_6122016632954703737[234] = 0;
   out_6122016632954703737[235] = 0;
   out_6122016632954703737[236] = 0;
   out_6122016632954703737[237] = 0;
   out_6122016632954703737[238] = 0;
   out_6122016632954703737[239] = 0;
   out_6122016632954703737[240] = 0;
   out_6122016632954703737[241] = 0;
   out_6122016632954703737[242] = 1;
   out_6122016632954703737[243] = 0;
   out_6122016632954703737[244] = 0;
   out_6122016632954703737[245] = 0;
   out_6122016632954703737[246] = 0;
   out_6122016632954703737[247] = 0;
   out_6122016632954703737[248] = 0;
   out_6122016632954703737[249] = 0;
   out_6122016632954703737[250] = 0;
   out_6122016632954703737[251] = 0;
   out_6122016632954703737[252] = 0;
   out_6122016632954703737[253] = 0;
   out_6122016632954703737[254] = 0;
   out_6122016632954703737[255] = 0;
   out_6122016632954703737[256] = 0;
   out_6122016632954703737[257] = 0;
   out_6122016632954703737[258] = 0;
   out_6122016632954703737[259] = 0;
   out_6122016632954703737[260] = 0;
   out_6122016632954703737[261] = 0;
   out_6122016632954703737[262] = 0;
   out_6122016632954703737[263] = 0;
   out_6122016632954703737[264] = 1;
   out_6122016632954703737[265] = 0;
   out_6122016632954703737[266] = 0;
   out_6122016632954703737[267] = 0;
   out_6122016632954703737[268] = 0;
   out_6122016632954703737[269] = 0;
   out_6122016632954703737[270] = 0;
   out_6122016632954703737[271] = 0;
   out_6122016632954703737[272] = 0;
   out_6122016632954703737[273] = 0;
   out_6122016632954703737[274] = 0;
   out_6122016632954703737[275] = 0;
   out_6122016632954703737[276] = 0;
   out_6122016632954703737[277] = 0;
   out_6122016632954703737[278] = 0;
   out_6122016632954703737[279] = 0;
   out_6122016632954703737[280] = 0;
   out_6122016632954703737[281] = 0;
   out_6122016632954703737[282] = 0;
   out_6122016632954703737[283] = 0;
   out_6122016632954703737[284] = 0;
   out_6122016632954703737[285] = 0;
   out_6122016632954703737[286] = 1;
   out_6122016632954703737[287] = 0;
   out_6122016632954703737[288] = 0;
   out_6122016632954703737[289] = 0;
   out_6122016632954703737[290] = 0;
   out_6122016632954703737[291] = 0;
   out_6122016632954703737[292] = 0;
   out_6122016632954703737[293] = 0;
   out_6122016632954703737[294] = 0;
   out_6122016632954703737[295] = 0;
   out_6122016632954703737[296] = 0;
   out_6122016632954703737[297] = 0;
   out_6122016632954703737[298] = 0;
   out_6122016632954703737[299] = 0;
   out_6122016632954703737[300] = 0;
   out_6122016632954703737[301] = 0;
   out_6122016632954703737[302] = 0;
   out_6122016632954703737[303] = 0;
   out_6122016632954703737[304] = 0;
   out_6122016632954703737[305] = 0;
   out_6122016632954703737[306] = 0;
   out_6122016632954703737[307] = 0;
   out_6122016632954703737[308] = 1;
   out_6122016632954703737[309] = 0;
   out_6122016632954703737[310] = 0;
   out_6122016632954703737[311] = 0;
   out_6122016632954703737[312] = 0;
   out_6122016632954703737[313] = 0;
   out_6122016632954703737[314] = 0;
   out_6122016632954703737[315] = 0;
   out_6122016632954703737[316] = 0;
   out_6122016632954703737[317] = 0;
   out_6122016632954703737[318] = 0;
   out_6122016632954703737[319] = 0;
   out_6122016632954703737[320] = 0;
   out_6122016632954703737[321] = 0;
   out_6122016632954703737[322] = 0;
   out_6122016632954703737[323] = 0;
   out_6122016632954703737[324] = 0;
   out_6122016632954703737[325] = 0;
   out_6122016632954703737[326] = 0;
   out_6122016632954703737[327] = 0;
   out_6122016632954703737[328] = 0;
   out_6122016632954703737[329] = 0;
   out_6122016632954703737[330] = 1;
   out_6122016632954703737[331] = 0;
   out_6122016632954703737[332] = 0;
   out_6122016632954703737[333] = 0;
   out_6122016632954703737[334] = 0;
   out_6122016632954703737[335] = 0;
   out_6122016632954703737[336] = 0;
   out_6122016632954703737[337] = 0;
   out_6122016632954703737[338] = 0;
   out_6122016632954703737[339] = 0;
   out_6122016632954703737[340] = 0;
   out_6122016632954703737[341] = 0;
   out_6122016632954703737[342] = 0;
   out_6122016632954703737[343] = 0;
   out_6122016632954703737[344] = 0;
   out_6122016632954703737[345] = 0;
   out_6122016632954703737[346] = 0;
   out_6122016632954703737[347] = 0;
   out_6122016632954703737[348] = 0;
   out_6122016632954703737[349] = 0;
   out_6122016632954703737[350] = 0;
   out_6122016632954703737[351] = 0;
   out_6122016632954703737[352] = 1;
   out_6122016632954703737[353] = 0;
   out_6122016632954703737[354] = 0;
   out_6122016632954703737[355] = 0;
   out_6122016632954703737[356] = 0;
   out_6122016632954703737[357] = 0;
   out_6122016632954703737[358] = 0;
   out_6122016632954703737[359] = 0;
   out_6122016632954703737[360] = 0;
   out_6122016632954703737[361] = 0;
   out_6122016632954703737[362] = 0;
   out_6122016632954703737[363] = 0;
   out_6122016632954703737[364] = 0;
   out_6122016632954703737[365] = 0;
   out_6122016632954703737[366] = 0;
   out_6122016632954703737[367] = 0;
   out_6122016632954703737[368] = 0;
   out_6122016632954703737[369] = 0;
   out_6122016632954703737[370] = 0;
   out_6122016632954703737[371] = 0;
   out_6122016632954703737[372] = 0;
   out_6122016632954703737[373] = 0;
   out_6122016632954703737[374] = 1;
   out_6122016632954703737[375] = 0;
   out_6122016632954703737[376] = 0;
   out_6122016632954703737[377] = 0;
   out_6122016632954703737[378] = 0;
   out_6122016632954703737[379] = 0;
   out_6122016632954703737[380] = 0;
   out_6122016632954703737[381] = 0;
   out_6122016632954703737[382] = 0;
   out_6122016632954703737[383] = 0;
   out_6122016632954703737[384] = 0;
   out_6122016632954703737[385] = 0;
   out_6122016632954703737[386] = 0;
   out_6122016632954703737[387] = 0;
   out_6122016632954703737[388] = 0;
   out_6122016632954703737[389] = 0;
   out_6122016632954703737[390] = 0;
   out_6122016632954703737[391] = 0;
   out_6122016632954703737[392] = 0;
   out_6122016632954703737[393] = 0;
   out_6122016632954703737[394] = 0;
   out_6122016632954703737[395] = 0;
   out_6122016632954703737[396] = 1;
   out_6122016632954703737[397] = 0;
   out_6122016632954703737[398] = 0;
   out_6122016632954703737[399] = 0;
   out_6122016632954703737[400] = 0;
   out_6122016632954703737[401] = 0;
   out_6122016632954703737[402] = 0;
   out_6122016632954703737[403] = 0;
   out_6122016632954703737[404] = 0;
   out_6122016632954703737[405] = 0;
   out_6122016632954703737[406] = 0;
   out_6122016632954703737[407] = 0;
   out_6122016632954703737[408] = 0;
   out_6122016632954703737[409] = 0;
   out_6122016632954703737[410] = 0;
   out_6122016632954703737[411] = 0;
   out_6122016632954703737[412] = 0;
   out_6122016632954703737[413] = 0;
   out_6122016632954703737[414] = 0;
   out_6122016632954703737[415] = 0;
   out_6122016632954703737[416] = 0;
   out_6122016632954703737[417] = 0;
   out_6122016632954703737[418] = 1;
   out_6122016632954703737[419] = 0;
   out_6122016632954703737[420] = 0;
   out_6122016632954703737[421] = 0;
   out_6122016632954703737[422] = 0;
   out_6122016632954703737[423] = 0;
   out_6122016632954703737[424] = 0;
   out_6122016632954703737[425] = 0;
   out_6122016632954703737[426] = 0;
   out_6122016632954703737[427] = 0;
   out_6122016632954703737[428] = 0;
   out_6122016632954703737[429] = 0;
   out_6122016632954703737[430] = 0;
   out_6122016632954703737[431] = 0;
   out_6122016632954703737[432] = 0;
   out_6122016632954703737[433] = 0;
   out_6122016632954703737[434] = 0;
   out_6122016632954703737[435] = 0;
   out_6122016632954703737[436] = 0;
   out_6122016632954703737[437] = 0;
   out_6122016632954703737[438] = 0;
   out_6122016632954703737[439] = 0;
   out_6122016632954703737[440] = 1;
}
void h_4(double *state, double *unused, double *out_9003365468988045872) {
   out_9003365468988045872[0] = state[10] + state[13];
   out_9003365468988045872[1] = state[11] + state[14];
   out_9003365468988045872[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_875493743705787679) {
   out_875493743705787679[0] = 0;
   out_875493743705787679[1] = 0;
   out_875493743705787679[2] = 0;
   out_875493743705787679[3] = 0;
   out_875493743705787679[4] = 0;
   out_875493743705787679[5] = 0;
   out_875493743705787679[6] = 0;
   out_875493743705787679[7] = 0;
   out_875493743705787679[8] = 0;
   out_875493743705787679[9] = 0;
   out_875493743705787679[10] = 1;
   out_875493743705787679[11] = 0;
   out_875493743705787679[12] = 0;
   out_875493743705787679[13] = 1;
   out_875493743705787679[14] = 0;
   out_875493743705787679[15] = 0;
   out_875493743705787679[16] = 0;
   out_875493743705787679[17] = 0;
   out_875493743705787679[18] = 0;
   out_875493743705787679[19] = 0;
   out_875493743705787679[20] = 0;
   out_875493743705787679[21] = 0;
   out_875493743705787679[22] = 0;
   out_875493743705787679[23] = 0;
   out_875493743705787679[24] = 0;
   out_875493743705787679[25] = 0;
   out_875493743705787679[26] = 0;
   out_875493743705787679[27] = 0;
   out_875493743705787679[28] = 0;
   out_875493743705787679[29] = 0;
   out_875493743705787679[30] = 0;
   out_875493743705787679[31] = 0;
   out_875493743705787679[32] = 0;
   out_875493743705787679[33] = 1;
   out_875493743705787679[34] = 0;
   out_875493743705787679[35] = 0;
   out_875493743705787679[36] = 1;
   out_875493743705787679[37] = 0;
   out_875493743705787679[38] = 0;
   out_875493743705787679[39] = 0;
   out_875493743705787679[40] = 0;
   out_875493743705787679[41] = 0;
   out_875493743705787679[42] = 0;
   out_875493743705787679[43] = 0;
   out_875493743705787679[44] = 0;
   out_875493743705787679[45] = 0;
   out_875493743705787679[46] = 0;
   out_875493743705787679[47] = 0;
   out_875493743705787679[48] = 0;
   out_875493743705787679[49] = 0;
   out_875493743705787679[50] = 0;
   out_875493743705787679[51] = 0;
   out_875493743705787679[52] = 0;
   out_875493743705787679[53] = 0;
   out_875493743705787679[54] = 0;
   out_875493743705787679[55] = 0;
   out_875493743705787679[56] = 1;
   out_875493743705787679[57] = 0;
   out_875493743705787679[58] = 0;
   out_875493743705787679[59] = 1;
   out_875493743705787679[60] = 0;
   out_875493743705787679[61] = 0;
   out_875493743705787679[62] = 0;
   out_875493743705787679[63] = 0;
   out_875493743705787679[64] = 0;
   out_875493743705787679[65] = 0;
}
void h_9(double *state, double *unused, double *out_7294275750039166322) {
   out_7294275750039166322[0] = state[10];
   out_7294275750039166322[1] = state[11];
   out_7294275750039166322[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6411725191558659791) {
   out_6411725191558659791[0] = 0;
   out_6411725191558659791[1] = 0;
   out_6411725191558659791[2] = 0;
   out_6411725191558659791[3] = 0;
   out_6411725191558659791[4] = 0;
   out_6411725191558659791[5] = 0;
   out_6411725191558659791[6] = 0;
   out_6411725191558659791[7] = 0;
   out_6411725191558659791[8] = 0;
   out_6411725191558659791[9] = 0;
   out_6411725191558659791[10] = 1;
   out_6411725191558659791[11] = 0;
   out_6411725191558659791[12] = 0;
   out_6411725191558659791[13] = 0;
   out_6411725191558659791[14] = 0;
   out_6411725191558659791[15] = 0;
   out_6411725191558659791[16] = 0;
   out_6411725191558659791[17] = 0;
   out_6411725191558659791[18] = 0;
   out_6411725191558659791[19] = 0;
   out_6411725191558659791[20] = 0;
   out_6411725191558659791[21] = 0;
   out_6411725191558659791[22] = 0;
   out_6411725191558659791[23] = 0;
   out_6411725191558659791[24] = 0;
   out_6411725191558659791[25] = 0;
   out_6411725191558659791[26] = 0;
   out_6411725191558659791[27] = 0;
   out_6411725191558659791[28] = 0;
   out_6411725191558659791[29] = 0;
   out_6411725191558659791[30] = 0;
   out_6411725191558659791[31] = 0;
   out_6411725191558659791[32] = 0;
   out_6411725191558659791[33] = 1;
   out_6411725191558659791[34] = 0;
   out_6411725191558659791[35] = 0;
   out_6411725191558659791[36] = 0;
   out_6411725191558659791[37] = 0;
   out_6411725191558659791[38] = 0;
   out_6411725191558659791[39] = 0;
   out_6411725191558659791[40] = 0;
   out_6411725191558659791[41] = 0;
   out_6411725191558659791[42] = 0;
   out_6411725191558659791[43] = 0;
   out_6411725191558659791[44] = 0;
   out_6411725191558659791[45] = 0;
   out_6411725191558659791[46] = 0;
   out_6411725191558659791[47] = 0;
   out_6411725191558659791[48] = 0;
   out_6411725191558659791[49] = 0;
   out_6411725191558659791[50] = 0;
   out_6411725191558659791[51] = 0;
   out_6411725191558659791[52] = 0;
   out_6411725191558659791[53] = 0;
   out_6411725191558659791[54] = 0;
   out_6411725191558659791[55] = 0;
   out_6411725191558659791[56] = 1;
   out_6411725191558659791[57] = 0;
   out_6411725191558659791[58] = 0;
   out_6411725191558659791[59] = 0;
   out_6411725191558659791[60] = 0;
   out_6411725191558659791[61] = 0;
   out_6411725191558659791[62] = 0;
   out_6411725191558659791[63] = 0;
   out_6411725191558659791[64] = 0;
   out_6411725191558659791[65] = 0;
}
void h_10(double *state, double *unused, double *out_8289912668181558020) {
   out_8289912668181558020[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8289912668181558020[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8289912668181558020[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4756992804745523366) {
   out_4756992804745523366[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4756992804745523366[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4756992804745523366[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4756992804745523366[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4756992804745523366[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4756992804745523366[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4756992804745523366[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4756992804745523366[7] = 0;
   out_4756992804745523366[8] = 0;
   out_4756992804745523366[9] = 0;
   out_4756992804745523366[10] = 0;
   out_4756992804745523366[11] = 0;
   out_4756992804745523366[12] = 0;
   out_4756992804745523366[13] = 0;
   out_4756992804745523366[14] = 0;
   out_4756992804745523366[15] = 0;
   out_4756992804745523366[16] = 1;
   out_4756992804745523366[17] = 0;
   out_4756992804745523366[18] = 0;
   out_4756992804745523366[19] = 1;
   out_4756992804745523366[20] = 0;
   out_4756992804745523366[21] = 0;
   out_4756992804745523366[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4756992804745523366[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4756992804745523366[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4756992804745523366[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4756992804745523366[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4756992804745523366[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4756992804745523366[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4756992804745523366[29] = 0;
   out_4756992804745523366[30] = 0;
   out_4756992804745523366[31] = 0;
   out_4756992804745523366[32] = 0;
   out_4756992804745523366[33] = 0;
   out_4756992804745523366[34] = 0;
   out_4756992804745523366[35] = 0;
   out_4756992804745523366[36] = 0;
   out_4756992804745523366[37] = 0;
   out_4756992804745523366[38] = 0;
   out_4756992804745523366[39] = 1;
   out_4756992804745523366[40] = 0;
   out_4756992804745523366[41] = 0;
   out_4756992804745523366[42] = 1;
   out_4756992804745523366[43] = 0;
   out_4756992804745523366[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4756992804745523366[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4756992804745523366[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4756992804745523366[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4756992804745523366[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4756992804745523366[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4756992804745523366[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4756992804745523366[51] = 0;
   out_4756992804745523366[52] = 0;
   out_4756992804745523366[53] = 0;
   out_4756992804745523366[54] = 0;
   out_4756992804745523366[55] = 0;
   out_4756992804745523366[56] = 0;
   out_4756992804745523366[57] = 0;
   out_4756992804745523366[58] = 0;
   out_4756992804745523366[59] = 0;
   out_4756992804745523366[60] = 0;
   out_4756992804745523366[61] = 0;
   out_4756992804745523366[62] = 1;
   out_4756992804745523366[63] = 0;
   out_4756992804745523366[64] = 0;
   out_4756992804745523366[65] = 1;
}
void h_12(double *state, double *unused, double *out_2787968462159155653) {
   out_2787968462159155653[0] = state[0];
   out_2787968462159155653[1] = state[1];
   out_2787968462159155653[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4143962664326174116) {
   out_4143962664326174116[0] = 1;
   out_4143962664326174116[1] = 0;
   out_4143962664326174116[2] = 0;
   out_4143962664326174116[3] = 0;
   out_4143962664326174116[4] = 0;
   out_4143962664326174116[5] = 0;
   out_4143962664326174116[6] = 0;
   out_4143962664326174116[7] = 0;
   out_4143962664326174116[8] = 0;
   out_4143962664326174116[9] = 0;
   out_4143962664326174116[10] = 0;
   out_4143962664326174116[11] = 0;
   out_4143962664326174116[12] = 0;
   out_4143962664326174116[13] = 0;
   out_4143962664326174116[14] = 0;
   out_4143962664326174116[15] = 0;
   out_4143962664326174116[16] = 0;
   out_4143962664326174116[17] = 0;
   out_4143962664326174116[18] = 0;
   out_4143962664326174116[19] = 0;
   out_4143962664326174116[20] = 0;
   out_4143962664326174116[21] = 0;
   out_4143962664326174116[22] = 0;
   out_4143962664326174116[23] = 1;
   out_4143962664326174116[24] = 0;
   out_4143962664326174116[25] = 0;
   out_4143962664326174116[26] = 0;
   out_4143962664326174116[27] = 0;
   out_4143962664326174116[28] = 0;
   out_4143962664326174116[29] = 0;
   out_4143962664326174116[30] = 0;
   out_4143962664326174116[31] = 0;
   out_4143962664326174116[32] = 0;
   out_4143962664326174116[33] = 0;
   out_4143962664326174116[34] = 0;
   out_4143962664326174116[35] = 0;
   out_4143962664326174116[36] = 0;
   out_4143962664326174116[37] = 0;
   out_4143962664326174116[38] = 0;
   out_4143962664326174116[39] = 0;
   out_4143962664326174116[40] = 0;
   out_4143962664326174116[41] = 0;
   out_4143962664326174116[42] = 0;
   out_4143962664326174116[43] = 0;
   out_4143962664326174116[44] = 0;
   out_4143962664326174116[45] = 0;
   out_4143962664326174116[46] = 1;
   out_4143962664326174116[47] = 0;
   out_4143962664326174116[48] = 0;
   out_4143962664326174116[49] = 0;
   out_4143962664326174116[50] = 0;
   out_4143962664326174116[51] = 0;
   out_4143962664326174116[52] = 0;
   out_4143962664326174116[53] = 0;
   out_4143962664326174116[54] = 0;
   out_4143962664326174116[55] = 0;
   out_4143962664326174116[56] = 0;
   out_4143962664326174116[57] = 0;
   out_4143962664326174116[58] = 0;
   out_4143962664326174116[59] = 0;
   out_4143962664326174116[60] = 0;
   out_4143962664326174116[61] = 0;
   out_4143962664326174116[62] = 0;
   out_4143962664326174116[63] = 0;
   out_4143962664326174116[64] = 0;
   out_4143962664326174116[65] = 0;
}
void h_35(double *state, double *unused, double *out_1938642465562957644) {
   out_1938642465562957644[0] = state[7];
   out_1938642465562957644[1] = state[8];
   out_1938642465562957644[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2491168313666819697) {
   out_2491168313666819697[0] = 0;
   out_2491168313666819697[1] = 0;
   out_2491168313666819697[2] = 0;
   out_2491168313666819697[3] = 0;
   out_2491168313666819697[4] = 0;
   out_2491168313666819697[5] = 0;
   out_2491168313666819697[6] = 0;
   out_2491168313666819697[7] = 1;
   out_2491168313666819697[8] = 0;
   out_2491168313666819697[9] = 0;
   out_2491168313666819697[10] = 0;
   out_2491168313666819697[11] = 0;
   out_2491168313666819697[12] = 0;
   out_2491168313666819697[13] = 0;
   out_2491168313666819697[14] = 0;
   out_2491168313666819697[15] = 0;
   out_2491168313666819697[16] = 0;
   out_2491168313666819697[17] = 0;
   out_2491168313666819697[18] = 0;
   out_2491168313666819697[19] = 0;
   out_2491168313666819697[20] = 0;
   out_2491168313666819697[21] = 0;
   out_2491168313666819697[22] = 0;
   out_2491168313666819697[23] = 0;
   out_2491168313666819697[24] = 0;
   out_2491168313666819697[25] = 0;
   out_2491168313666819697[26] = 0;
   out_2491168313666819697[27] = 0;
   out_2491168313666819697[28] = 0;
   out_2491168313666819697[29] = 0;
   out_2491168313666819697[30] = 1;
   out_2491168313666819697[31] = 0;
   out_2491168313666819697[32] = 0;
   out_2491168313666819697[33] = 0;
   out_2491168313666819697[34] = 0;
   out_2491168313666819697[35] = 0;
   out_2491168313666819697[36] = 0;
   out_2491168313666819697[37] = 0;
   out_2491168313666819697[38] = 0;
   out_2491168313666819697[39] = 0;
   out_2491168313666819697[40] = 0;
   out_2491168313666819697[41] = 0;
   out_2491168313666819697[42] = 0;
   out_2491168313666819697[43] = 0;
   out_2491168313666819697[44] = 0;
   out_2491168313666819697[45] = 0;
   out_2491168313666819697[46] = 0;
   out_2491168313666819697[47] = 0;
   out_2491168313666819697[48] = 0;
   out_2491168313666819697[49] = 0;
   out_2491168313666819697[50] = 0;
   out_2491168313666819697[51] = 0;
   out_2491168313666819697[52] = 0;
   out_2491168313666819697[53] = 1;
   out_2491168313666819697[54] = 0;
   out_2491168313666819697[55] = 0;
   out_2491168313666819697[56] = 0;
   out_2491168313666819697[57] = 0;
   out_2491168313666819697[58] = 0;
   out_2491168313666819697[59] = 0;
   out_2491168313666819697[60] = 0;
   out_2491168313666819697[61] = 0;
   out_2491168313666819697[62] = 0;
   out_2491168313666819697[63] = 0;
   out_2491168313666819697[64] = 0;
   out_2491168313666819697[65] = 0;
}
void h_32(double *state, double *unused, double *out_6691864520126804195) {
   out_6691864520126804195[0] = state[3];
   out_6691864520126804195[1] = state[4];
   out_6691864520126804195[2] = state[5];
   out_6691864520126804195[3] = state[6];
}
void H_32(double *state, double *unused, double *out_395313109181634799) {
   out_395313109181634799[0] = 0;
   out_395313109181634799[1] = 0;
   out_395313109181634799[2] = 0;
   out_395313109181634799[3] = 1;
   out_395313109181634799[4] = 0;
   out_395313109181634799[5] = 0;
   out_395313109181634799[6] = 0;
   out_395313109181634799[7] = 0;
   out_395313109181634799[8] = 0;
   out_395313109181634799[9] = 0;
   out_395313109181634799[10] = 0;
   out_395313109181634799[11] = 0;
   out_395313109181634799[12] = 0;
   out_395313109181634799[13] = 0;
   out_395313109181634799[14] = 0;
   out_395313109181634799[15] = 0;
   out_395313109181634799[16] = 0;
   out_395313109181634799[17] = 0;
   out_395313109181634799[18] = 0;
   out_395313109181634799[19] = 0;
   out_395313109181634799[20] = 0;
   out_395313109181634799[21] = 0;
   out_395313109181634799[22] = 0;
   out_395313109181634799[23] = 0;
   out_395313109181634799[24] = 0;
   out_395313109181634799[25] = 0;
   out_395313109181634799[26] = 1;
   out_395313109181634799[27] = 0;
   out_395313109181634799[28] = 0;
   out_395313109181634799[29] = 0;
   out_395313109181634799[30] = 0;
   out_395313109181634799[31] = 0;
   out_395313109181634799[32] = 0;
   out_395313109181634799[33] = 0;
   out_395313109181634799[34] = 0;
   out_395313109181634799[35] = 0;
   out_395313109181634799[36] = 0;
   out_395313109181634799[37] = 0;
   out_395313109181634799[38] = 0;
   out_395313109181634799[39] = 0;
   out_395313109181634799[40] = 0;
   out_395313109181634799[41] = 0;
   out_395313109181634799[42] = 0;
   out_395313109181634799[43] = 0;
   out_395313109181634799[44] = 0;
   out_395313109181634799[45] = 0;
   out_395313109181634799[46] = 0;
   out_395313109181634799[47] = 0;
   out_395313109181634799[48] = 0;
   out_395313109181634799[49] = 1;
   out_395313109181634799[50] = 0;
   out_395313109181634799[51] = 0;
   out_395313109181634799[52] = 0;
   out_395313109181634799[53] = 0;
   out_395313109181634799[54] = 0;
   out_395313109181634799[55] = 0;
   out_395313109181634799[56] = 0;
   out_395313109181634799[57] = 0;
   out_395313109181634799[58] = 0;
   out_395313109181634799[59] = 0;
   out_395313109181634799[60] = 0;
   out_395313109181634799[61] = 0;
   out_395313109181634799[62] = 0;
   out_395313109181634799[63] = 0;
   out_395313109181634799[64] = 0;
   out_395313109181634799[65] = 0;
   out_395313109181634799[66] = 0;
   out_395313109181634799[67] = 0;
   out_395313109181634799[68] = 0;
   out_395313109181634799[69] = 0;
   out_395313109181634799[70] = 0;
   out_395313109181634799[71] = 0;
   out_395313109181634799[72] = 1;
   out_395313109181634799[73] = 0;
   out_395313109181634799[74] = 0;
   out_395313109181634799[75] = 0;
   out_395313109181634799[76] = 0;
   out_395313109181634799[77] = 0;
   out_395313109181634799[78] = 0;
   out_395313109181634799[79] = 0;
   out_395313109181634799[80] = 0;
   out_395313109181634799[81] = 0;
   out_395313109181634799[82] = 0;
   out_395313109181634799[83] = 0;
   out_395313109181634799[84] = 0;
   out_395313109181634799[85] = 0;
   out_395313109181634799[86] = 0;
   out_395313109181634799[87] = 0;
}
void h_13(double *state, double *unused, double *out_3837576363831715836) {
   out_3837576363831715836[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3837576363831715836[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3837576363831715836[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3742987210220696894) {
   out_3742987210220696894[0] = 0;
   out_3742987210220696894[1] = 0;
   out_3742987210220696894[2] = 0;
   out_3742987210220696894[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3742987210220696894[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3742987210220696894[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3742987210220696894[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3742987210220696894[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3742987210220696894[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3742987210220696894[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3742987210220696894[10] = 0;
   out_3742987210220696894[11] = 0;
   out_3742987210220696894[12] = 0;
   out_3742987210220696894[13] = 0;
   out_3742987210220696894[14] = 0;
   out_3742987210220696894[15] = 0;
   out_3742987210220696894[16] = 0;
   out_3742987210220696894[17] = 0;
   out_3742987210220696894[18] = 0;
   out_3742987210220696894[19] = 0;
   out_3742987210220696894[20] = 0;
   out_3742987210220696894[21] = 0;
   out_3742987210220696894[22] = 0;
   out_3742987210220696894[23] = 0;
   out_3742987210220696894[24] = 0;
   out_3742987210220696894[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3742987210220696894[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3742987210220696894[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3742987210220696894[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3742987210220696894[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3742987210220696894[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3742987210220696894[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3742987210220696894[32] = 0;
   out_3742987210220696894[33] = 0;
   out_3742987210220696894[34] = 0;
   out_3742987210220696894[35] = 0;
   out_3742987210220696894[36] = 0;
   out_3742987210220696894[37] = 0;
   out_3742987210220696894[38] = 0;
   out_3742987210220696894[39] = 0;
   out_3742987210220696894[40] = 0;
   out_3742987210220696894[41] = 0;
   out_3742987210220696894[42] = 0;
   out_3742987210220696894[43] = 0;
   out_3742987210220696894[44] = 0;
   out_3742987210220696894[45] = 0;
   out_3742987210220696894[46] = 0;
   out_3742987210220696894[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3742987210220696894[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3742987210220696894[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3742987210220696894[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3742987210220696894[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3742987210220696894[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3742987210220696894[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3742987210220696894[54] = 0;
   out_3742987210220696894[55] = 0;
   out_3742987210220696894[56] = 0;
   out_3742987210220696894[57] = 0;
   out_3742987210220696894[58] = 0;
   out_3742987210220696894[59] = 0;
   out_3742987210220696894[60] = 0;
   out_3742987210220696894[61] = 0;
   out_3742987210220696894[62] = 0;
   out_3742987210220696894[63] = 0;
   out_3742987210220696894[64] = 0;
   out_3742987210220696894[65] = 0;
}
void h_14(double *state, double *unused, double *out_7294275750039166322) {
   out_7294275750039166322[0] = state[10];
   out_7294275750039166322[1] = state[11];
   out_7294275750039166322[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6411725191558659791) {
   out_6411725191558659791[0] = 0;
   out_6411725191558659791[1] = 0;
   out_6411725191558659791[2] = 0;
   out_6411725191558659791[3] = 0;
   out_6411725191558659791[4] = 0;
   out_6411725191558659791[5] = 0;
   out_6411725191558659791[6] = 0;
   out_6411725191558659791[7] = 0;
   out_6411725191558659791[8] = 0;
   out_6411725191558659791[9] = 0;
   out_6411725191558659791[10] = 1;
   out_6411725191558659791[11] = 0;
   out_6411725191558659791[12] = 0;
   out_6411725191558659791[13] = 0;
   out_6411725191558659791[14] = 0;
   out_6411725191558659791[15] = 0;
   out_6411725191558659791[16] = 0;
   out_6411725191558659791[17] = 0;
   out_6411725191558659791[18] = 0;
   out_6411725191558659791[19] = 0;
   out_6411725191558659791[20] = 0;
   out_6411725191558659791[21] = 0;
   out_6411725191558659791[22] = 0;
   out_6411725191558659791[23] = 0;
   out_6411725191558659791[24] = 0;
   out_6411725191558659791[25] = 0;
   out_6411725191558659791[26] = 0;
   out_6411725191558659791[27] = 0;
   out_6411725191558659791[28] = 0;
   out_6411725191558659791[29] = 0;
   out_6411725191558659791[30] = 0;
   out_6411725191558659791[31] = 0;
   out_6411725191558659791[32] = 0;
   out_6411725191558659791[33] = 1;
   out_6411725191558659791[34] = 0;
   out_6411725191558659791[35] = 0;
   out_6411725191558659791[36] = 0;
   out_6411725191558659791[37] = 0;
   out_6411725191558659791[38] = 0;
   out_6411725191558659791[39] = 0;
   out_6411725191558659791[40] = 0;
   out_6411725191558659791[41] = 0;
   out_6411725191558659791[42] = 0;
   out_6411725191558659791[43] = 0;
   out_6411725191558659791[44] = 0;
   out_6411725191558659791[45] = 0;
   out_6411725191558659791[46] = 0;
   out_6411725191558659791[47] = 0;
   out_6411725191558659791[48] = 0;
   out_6411725191558659791[49] = 0;
   out_6411725191558659791[50] = 0;
   out_6411725191558659791[51] = 0;
   out_6411725191558659791[52] = 0;
   out_6411725191558659791[53] = 0;
   out_6411725191558659791[54] = 0;
   out_6411725191558659791[55] = 0;
   out_6411725191558659791[56] = 1;
   out_6411725191558659791[57] = 0;
   out_6411725191558659791[58] = 0;
   out_6411725191558659791[59] = 0;
   out_6411725191558659791[60] = 0;
   out_6411725191558659791[61] = 0;
   out_6411725191558659791[62] = 0;
   out_6411725191558659791[63] = 0;
   out_6411725191558659791[64] = 0;
   out_6411725191558659791[65] = 0;
}
void h_33(double *state, double *unused, double *out_7556352649106866925) {
   out_7556352649106866925[0] = state[16];
   out_7556352649106866925[1] = state[17];
   out_7556352649106866925[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5641725318305677301) {
   out_5641725318305677301[0] = 0;
   out_5641725318305677301[1] = 0;
   out_5641725318305677301[2] = 0;
   out_5641725318305677301[3] = 0;
   out_5641725318305677301[4] = 0;
   out_5641725318305677301[5] = 0;
   out_5641725318305677301[6] = 0;
   out_5641725318305677301[7] = 0;
   out_5641725318305677301[8] = 0;
   out_5641725318305677301[9] = 0;
   out_5641725318305677301[10] = 0;
   out_5641725318305677301[11] = 0;
   out_5641725318305677301[12] = 0;
   out_5641725318305677301[13] = 0;
   out_5641725318305677301[14] = 0;
   out_5641725318305677301[15] = 0;
   out_5641725318305677301[16] = 1;
   out_5641725318305677301[17] = 0;
   out_5641725318305677301[18] = 0;
   out_5641725318305677301[19] = 0;
   out_5641725318305677301[20] = 0;
   out_5641725318305677301[21] = 0;
   out_5641725318305677301[22] = 0;
   out_5641725318305677301[23] = 0;
   out_5641725318305677301[24] = 0;
   out_5641725318305677301[25] = 0;
   out_5641725318305677301[26] = 0;
   out_5641725318305677301[27] = 0;
   out_5641725318305677301[28] = 0;
   out_5641725318305677301[29] = 0;
   out_5641725318305677301[30] = 0;
   out_5641725318305677301[31] = 0;
   out_5641725318305677301[32] = 0;
   out_5641725318305677301[33] = 0;
   out_5641725318305677301[34] = 0;
   out_5641725318305677301[35] = 0;
   out_5641725318305677301[36] = 0;
   out_5641725318305677301[37] = 0;
   out_5641725318305677301[38] = 0;
   out_5641725318305677301[39] = 1;
   out_5641725318305677301[40] = 0;
   out_5641725318305677301[41] = 0;
   out_5641725318305677301[42] = 0;
   out_5641725318305677301[43] = 0;
   out_5641725318305677301[44] = 0;
   out_5641725318305677301[45] = 0;
   out_5641725318305677301[46] = 0;
   out_5641725318305677301[47] = 0;
   out_5641725318305677301[48] = 0;
   out_5641725318305677301[49] = 0;
   out_5641725318305677301[50] = 0;
   out_5641725318305677301[51] = 0;
   out_5641725318305677301[52] = 0;
   out_5641725318305677301[53] = 0;
   out_5641725318305677301[54] = 0;
   out_5641725318305677301[55] = 0;
   out_5641725318305677301[56] = 0;
   out_5641725318305677301[57] = 0;
   out_5641725318305677301[58] = 0;
   out_5641725318305677301[59] = 0;
   out_5641725318305677301[60] = 0;
   out_5641725318305677301[61] = 0;
   out_5641725318305677301[62] = 1;
   out_5641725318305677301[63] = 0;
   out_5641725318305677301[64] = 0;
   out_5641725318305677301[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5284371152158479112) {
  H(in_vec, out_5284371152158479112);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8878190256849491120) {
  err_fun(nom_x, delta_x, out_8878190256849491120);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6398751028731537898) {
  inv_err_fun(nom_x, true_x, out_6398751028731537898);
}
void live_H_mod_fun(double *state, double *out_2043043155980843567) {
  H_mod_fun(state, out_2043043155980843567);
}
void live_f_fun(double *state, double dt, double *out_2010583831986639410) {
  f_fun(state,  dt, out_2010583831986639410);
}
void live_F_fun(double *state, double dt, double *out_6122016632954703737) {
  F_fun(state,  dt, out_6122016632954703737);
}
void live_h_4(double *state, double *unused, double *out_9003365468988045872) {
  h_4(state, unused, out_9003365468988045872);
}
void live_H_4(double *state, double *unused, double *out_875493743705787679) {
  H_4(state, unused, out_875493743705787679);
}
void live_h_9(double *state, double *unused, double *out_7294275750039166322) {
  h_9(state, unused, out_7294275750039166322);
}
void live_H_9(double *state, double *unused, double *out_6411725191558659791) {
  H_9(state, unused, out_6411725191558659791);
}
void live_h_10(double *state, double *unused, double *out_8289912668181558020) {
  h_10(state, unused, out_8289912668181558020);
}
void live_H_10(double *state, double *unused, double *out_4756992804745523366) {
  H_10(state, unused, out_4756992804745523366);
}
void live_h_12(double *state, double *unused, double *out_2787968462159155653) {
  h_12(state, unused, out_2787968462159155653);
}
void live_H_12(double *state, double *unused, double *out_4143962664326174116) {
  H_12(state, unused, out_4143962664326174116);
}
void live_h_35(double *state, double *unused, double *out_1938642465562957644) {
  h_35(state, unused, out_1938642465562957644);
}
void live_H_35(double *state, double *unused, double *out_2491168313666819697) {
  H_35(state, unused, out_2491168313666819697);
}
void live_h_32(double *state, double *unused, double *out_6691864520126804195) {
  h_32(state, unused, out_6691864520126804195);
}
void live_H_32(double *state, double *unused, double *out_395313109181634799) {
  H_32(state, unused, out_395313109181634799);
}
void live_h_13(double *state, double *unused, double *out_3837576363831715836) {
  h_13(state, unused, out_3837576363831715836);
}
void live_H_13(double *state, double *unused, double *out_3742987210220696894) {
  H_13(state, unused, out_3742987210220696894);
}
void live_h_14(double *state, double *unused, double *out_7294275750039166322) {
  h_14(state, unused, out_7294275750039166322);
}
void live_H_14(double *state, double *unused, double *out_6411725191558659791) {
  H_14(state, unused, out_6411725191558659791);
}
void live_h_33(double *state, double *unused, double *out_7556352649106866925) {
  h_33(state, unused, out_7556352649106866925);
}
void live_H_33(double *state, double *unused, double *out_5641725318305677301) {
  H_33(state, unused, out_5641725318305677301);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
