#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4686531166020845656) {
   out_4686531166020845656[0] = 0;
   out_4686531166020845656[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4686531166020845656[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4686531166020845656[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4686531166020845656[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4686531166020845656[5] = -sin(in_vec[1]);
   out_4686531166020845656[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4686531166020845656[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4686531166020845656[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4686531166020845656[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4686531166020845656[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4686531166020845656[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4686531166020845656[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4686531166020845656[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4686531166020845656[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4686531166020845656[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4686531166020845656[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4686531166020845656[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5460360781474494139) {
   out_5460360781474494139[0] = delta_x[0] + nom_x[0];
   out_5460360781474494139[1] = delta_x[1] + nom_x[1];
   out_5460360781474494139[2] = delta_x[2] + nom_x[2];
   out_5460360781474494139[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5460360781474494139[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5460360781474494139[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5460360781474494139[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5460360781474494139[7] = delta_x[6] + nom_x[7];
   out_5460360781474494139[8] = delta_x[7] + nom_x[8];
   out_5460360781474494139[9] = delta_x[8] + nom_x[9];
   out_5460360781474494139[10] = delta_x[9] + nom_x[10];
   out_5460360781474494139[11] = delta_x[10] + nom_x[11];
   out_5460360781474494139[12] = delta_x[11] + nom_x[12];
   out_5460360781474494139[13] = delta_x[12] + nom_x[13];
   out_5460360781474494139[14] = delta_x[13] + nom_x[14];
   out_5460360781474494139[15] = delta_x[14] + nom_x[15];
   out_5460360781474494139[16] = delta_x[15] + nom_x[16];
   out_5460360781474494139[17] = delta_x[16] + nom_x[17];
   out_5460360781474494139[18] = delta_x[17] + nom_x[18];
   out_5460360781474494139[19] = delta_x[18] + nom_x[19];
   out_5460360781474494139[20] = delta_x[19] + nom_x[20];
   out_5460360781474494139[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1058204392407215823) {
   out_1058204392407215823[0] = -nom_x[0] + true_x[0];
   out_1058204392407215823[1] = -nom_x[1] + true_x[1];
   out_1058204392407215823[2] = -nom_x[2] + true_x[2];
   out_1058204392407215823[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1058204392407215823[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1058204392407215823[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1058204392407215823[6] = -nom_x[7] + true_x[7];
   out_1058204392407215823[7] = -nom_x[8] + true_x[8];
   out_1058204392407215823[8] = -nom_x[9] + true_x[9];
   out_1058204392407215823[9] = -nom_x[10] + true_x[10];
   out_1058204392407215823[10] = -nom_x[11] + true_x[11];
   out_1058204392407215823[11] = -nom_x[12] + true_x[12];
   out_1058204392407215823[12] = -nom_x[13] + true_x[13];
   out_1058204392407215823[13] = -nom_x[14] + true_x[14];
   out_1058204392407215823[14] = -nom_x[15] + true_x[15];
   out_1058204392407215823[15] = -nom_x[16] + true_x[16];
   out_1058204392407215823[16] = -nom_x[17] + true_x[17];
   out_1058204392407215823[17] = -nom_x[18] + true_x[18];
   out_1058204392407215823[18] = -nom_x[19] + true_x[19];
   out_1058204392407215823[19] = -nom_x[20] + true_x[20];
   out_1058204392407215823[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2613468595030008435) {
   out_2613468595030008435[0] = 1.0;
   out_2613468595030008435[1] = 0;
   out_2613468595030008435[2] = 0;
   out_2613468595030008435[3] = 0;
   out_2613468595030008435[4] = 0;
   out_2613468595030008435[5] = 0;
   out_2613468595030008435[6] = 0;
   out_2613468595030008435[7] = 0;
   out_2613468595030008435[8] = 0;
   out_2613468595030008435[9] = 0;
   out_2613468595030008435[10] = 0;
   out_2613468595030008435[11] = 0;
   out_2613468595030008435[12] = 0;
   out_2613468595030008435[13] = 0;
   out_2613468595030008435[14] = 0;
   out_2613468595030008435[15] = 0;
   out_2613468595030008435[16] = 0;
   out_2613468595030008435[17] = 0;
   out_2613468595030008435[18] = 0;
   out_2613468595030008435[19] = 0;
   out_2613468595030008435[20] = 0;
   out_2613468595030008435[21] = 0;
   out_2613468595030008435[22] = 1.0;
   out_2613468595030008435[23] = 0;
   out_2613468595030008435[24] = 0;
   out_2613468595030008435[25] = 0;
   out_2613468595030008435[26] = 0;
   out_2613468595030008435[27] = 0;
   out_2613468595030008435[28] = 0;
   out_2613468595030008435[29] = 0;
   out_2613468595030008435[30] = 0;
   out_2613468595030008435[31] = 0;
   out_2613468595030008435[32] = 0;
   out_2613468595030008435[33] = 0;
   out_2613468595030008435[34] = 0;
   out_2613468595030008435[35] = 0;
   out_2613468595030008435[36] = 0;
   out_2613468595030008435[37] = 0;
   out_2613468595030008435[38] = 0;
   out_2613468595030008435[39] = 0;
   out_2613468595030008435[40] = 0;
   out_2613468595030008435[41] = 0;
   out_2613468595030008435[42] = 0;
   out_2613468595030008435[43] = 0;
   out_2613468595030008435[44] = 1.0;
   out_2613468595030008435[45] = 0;
   out_2613468595030008435[46] = 0;
   out_2613468595030008435[47] = 0;
   out_2613468595030008435[48] = 0;
   out_2613468595030008435[49] = 0;
   out_2613468595030008435[50] = 0;
   out_2613468595030008435[51] = 0;
   out_2613468595030008435[52] = 0;
   out_2613468595030008435[53] = 0;
   out_2613468595030008435[54] = 0;
   out_2613468595030008435[55] = 0;
   out_2613468595030008435[56] = 0;
   out_2613468595030008435[57] = 0;
   out_2613468595030008435[58] = 0;
   out_2613468595030008435[59] = 0;
   out_2613468595030008435[60] = 0;
   out_2613468595030008435[61] = 0;
   out_2613468595030008435[62] = 0;
   out_2613468595030008435[63] = 0;
   out_2613468595030008435[64] = 0;
   out_2613468595030008435[65] = 0;
   out_2613468595030008435[66] = -0.5*state[4];
   out_2613468595030008435[67] = -0.5*state[5];
   out_2613468595030008435[68] = -0.5*state[6];
   out_2613468595030008435[69] = 0;
   out_2613468595030008435[70] = 0;
   out_2613468595030008435[71] = 0;
   out_2613468595030008435[72] = 0;
   out_2613468595030008435[73] = 0;
   out_2613468595030008435[74] = 0;
   out_2613468595030008435[75] = 0;
   out_2613468595030008435[76] = 0;
   out_2613468595030008435[77] = 0;
   out_2613468595030008435[78] = 0;
   out_2613468595030008435[79] = 0;
   out_2613468595030008435[80] = 0;
   out_2613468595030008435[81] = 0;
   out_2613468595030008435[82] = 0;
   out_2613468595030008435[83] = 0;
   out_2613468595030008435[84] = 0;
   out_2613468595030008435[85] = 0;
   out_2613468595030008435[86] = 0;
   out_2613468595030008435[87] = 0.5*state[3];
   out_2613468595030008435[88] = 0.5*state[6];
   out_2613468595030008435[89] = -0.5*state[5];
   out_2613468595030008435[90] = 0;
   out_2613468595030008435[91] = 0;
   out_2613468595030008435[92] = 0;
   out_2613468595030008435[93] = 0;
   out_2613468595030008435[94] = 0;
   out_2613468595030008435[95] = 0;
   out_2613468595030008435[96] = 0;
   out_2613468595030008435[97] = 0;
   out_2613468595030008435[98] = 0;
   out_2613468595030008435[99] = 0;
   out_2613468595030008435[100] = 0;
   out_2613468595030008435[101] = 0;
   out_2613468595030008435[102] = 0;
   out_2613468595030008435[103] = 0;
   out_2613468595030008435[104] = 0;
   out_2613468595030008435[105] = 0;
   out_2613468595030008435[106] = 0;
   out_2613468595030008435[107] = 0;
   out_2613468595030008435[108] = -0.5*state[6];
   out_2613468595030008435[109] = 0.5*state[3];
   out_2613468595030008435[110] = 0.5*state[4];
   out_2613468595030008435[111] = 0;
   out_2613468595030008435[112] = 0;
   out_2613468595030008435[113] = 0;
   out_2613468595030008435[114] = 0;
   out_2613468595030008435[115] = 0;
   out_2613468595030008435[116] = 0;
   out_2613468595030008435[117] = 0;
   out_2613468595030008435[118] = 0;
   out_2613468595030008435[119] = 0;
   out_2613468595030008435[120] = 0;
   out_2613468595030008435[121] = 0;
   out_2613468595030008435[122] = 0;
   out_2613468595030008435[123] = 0;
   out_2613468595030008435[124] = 0;
   out_2613468595030008435[125] = 0;
   out_2613468595030008435[126] = 0;
   out_2613468595030008435[127] = 0;
   out_2613468595030008435[128] = 0;
   out_2613468595030008435[129] = 0.5*state[5];
   out_2613468595030008435[130] = -0.5*state[4];
   out_2613468595030008435[131] = 0.5*state[3];
   out_2613468595030008435[132] = 0;
   out_2613468595030008435[133] = 0;
   out_2613468595030008435[134] = 0;
   out_2613468595030008435[135] = 0;
   out_2613468595030008435[136] = 0;
   out_2613468595030008435[137] = 0;
   out_2613468595030008435[138] = 0;
   out_2613468595030008435[139] = 0;
   out_2613468595030008435[140] = 0;
   out_2613468595030008435[141] = 0;
   out_2613468595030008435[142] = 0;
   out_2613468595030008435[143] = 0;
   out_2613468595030008435[144] = 0;
   out_2613468595030008435[145] = 0;
   out_2613468595030008435[146] = 0;
   out_2613468595030008435[147] = 0;
   out_2613468595030008435[148] = 0;
   out_2613468595030008435[149] = 0;
   out_2613468595030008435[150] = 0;
   out_2613468595030008435[151] = 0;
   out_2613468595030008435[152] = 0;
   out_2613468595030008435[153] = 1.0;
   out_2613468595030008435[154] = 0;
   out_2613468595030008435[155] = 0;
   out_2613468595030008435[156] = 0;
   out_2613468595030008435[157] = 0;
   out_2613468595030008435[158] = 0;
   out_2613468595030008435[159] = 0;
   out_2613468595030008435[160] = 0;
   out_2613468595030008435[161] = 0;
   out_2613468595030008435[162] = 0;
   out_2613468595030008435[163] = 0;
   out_2613468595030008435[164] = 0;
   out_2613468595030008435[165] = 0;
   out_2613468595030008435[166] = 0;
   out_2613468595030008435[167] = 0;
   out_2613468595030008435[168] = 0;
   out_2613468595030008435[169] = 0;
   out_2613468595030008435[170] = 0;
   out_2613468595030008435[171] = 0;
   out_2613468595030008435[172] = 0;
   out_2613468595030008435[173] = 0;
   out_2613468595030008435[174] = 0;
   out_2613468595030008435[175] = 1.0;
   out_2613468595030008435[176] = 0;
   out_2613468595030008435[177] = 0;
   out_2613468595030008435[178] = 0;
   out_2613468595030008435[179] = 0;
   out_2613468595030008435[180] = 0;
   out_2613468595030008435[181] = 0;
   out_2613468595030008435[182] = 0;
   out_2613468595030008435[183] = 0;
   out_2613468595030008435[184] = 0;
   out_2613468595030008435[185] = 0;
   out_2613468595030008435[186] = 0;
   out_2613468595030008435[187] = 0;
   out_2613468595030008435[188] = 0;
   out_2613468595030008435[189] = 0;
   out_2613468595030008435[190] = 0;
   out_2613468595030008435[191] = 0;
   out_2613468595030008435[192] = 0;
   out_2613468595030008435[193] = 0;
   out_2613468595030008435[194] = 0;
   out_2613468595030008435[195] = 0;
   out_2613468595030008435[196] = 0;
   out_2613468595030008435[197] = 1.0;
   out_2613468595030008435[198] = 0;
   out_2613468595030008435[199] = 0;
   out_2613468595030008435[200] = 0;
   out_2613468595030008435[201] = 0;
   out_2613468595030008435[202] = 0;
   out_2613468595030008435[203] = 0;
   out_2613468595030008435[204] = 0;
   out_2613468595030008435[205] = 0;
   out_2613468595030008435[206] = 0;
   out_2613468595030008435[207] = 0;
   out_2613468595030008435[208] = 0;
   out_2613468595030008435[209] = 0;
   out_2613468595030008435[210] = 0;
   out_2613468595030008435[211] = 0;
   out_2613468595030008435[212] = 0;
   out_2613468595030008435[213] = 0;
   out_2613468595030008435[214] = 0;
   out_2613468595030008435[215] = 0;
   out_2613468595030008435[216] = 0;
   out_2613468595030008435[217] = 0;
   out_2613468595030008435[218] = 0;
   out_2613468595030008435[219] = 1.0;
   out_2613468595030008435[220] = 0;
   out_2613468595030008435[221] = 0;
   out_2613468595030008435[222] = 0;
   out_2613468595030008435[223] = 0;
   out_2613468595030008435[224] = 0;
   out_2613468595030008435[225] = 0;
   out_2613468595030008435[226] = 0;
   out_2613468595030008435[227] = 0;
   out_2613468595030008435[228] = 0;
   out_2613468595030008435[229] = 0;
   out_2613468595030008435[230] = 0;
   out_2613468595030008435[231] = 0;
   out_2613468595030008435[232] = 0;
   out_2613468595030008435[233] = 0;
   out_2613468595030008435[234] = 0;
   out_2613468595030008435[235] = 0;
   out_2613468595030008435[236] = 0;
   out_2613468595030008435[237] = 0;
   out_2613468595030008435[238] = 0;
   out_2613468595030008435[239] = 0;
   out_2613468595030008435[240] = 0;
   out_2613468595030008435[241] = 1.0;
   out_2613468595030008435[242] = 0;
   out_2613468595030008435[243] = 0;
   out_2613468595030008435[244] = 0;
   out_2613468595030008435[245] = 0;
   out_2613468595030008435[246] = 0;
   out_2613468595030008435[247] = 0;
   out_2613468595030008435[248] = 0;
   out_2613468595030008435[249] = 0;
   out_2613468595030008435[250] = 0;
   out_2613468595030008435[251] = 0;
   out_2613468595030008435[252] = 0;
   out_2613468595030008435[253] = 0;
   out_2613468595030008435[254] = 0;
   out_2613468595030008435[255] = 0;
   out_2613468595030008435[256] = 0;
   out_2613468595030008435[257] = 0;
   out_2613468595030008435[258] = 0;
   out_2613468595030008435[259] = 0;
   out_2613468595030008435[260] = 0;
   out_2613468595030008435[261] = 0;
   out_2613468595030008435[262] = 0;
   out_2613468595030008435[263] = 1.0;
   out_2613468595030008435[264] = 0;
   out_2613468595030008435[265] = 0;
   out_2613468595030008435[266] = 0;
   out_2613468595030008435[267] = 0;
   out_2613468595030008435[268] = 0;
   out_2613468595030008435[269] = 0;
   out_2613468595030008435[270] = 0;
   out_2613468595030008435[271] = 0;
   out_2613468595030008435[272] = 0;
   out_2613468595030008435[273] = 0;
   out_2613468595030008435[274] = 0;
   out_2613468595030008435[275] = 0;
   out_2613468595030008435[276] = 0;
   out_2613468595030008435[277] = 0;
   out_2613468595030008435[278] = 0;
   out_2613468595030008435[279] = 0;
   out_2613468595030008435[280] = 0;
   out_2613468595030008435[281] = 0;
   out_2613468595030008435[282] = 0;
   out_2613468595030008435[283] = 0;
   out_2613468595030008435[284] = 0;
   out_2613468595030008435[285] = 1.0;
   out_2613468595030008435[286] = 0;
   out_2613468595030008435[287] = 0;
   out_2613468595030008435[288] = 0;
   out_2613468595030008435[289] = 0;
   out_2613468595030008435[290] = 0;
   out_2613468595030008435[291] = 0;
   out_2613468595030008435[292] = 0;
   out_2613468595030008435[293] = 0;
   out_2613468595030008435[294] = 0;
   out_2613468595030008435[295] = 0;
   out_2613468595030008435[296] = 0;
   out_2613468595030008435[297] = 0;
   out_2613468595030008435[298] = 0;
   out_2613468595030008435[299] = 0;
   out_2613468595030008435[300] = 0;
   out_2613468595030008435[301] = 0;
   out_2613468595030008435[302] = 0;
   out_2613468595030008435[303] = 0;
   out_2613468595030008435[304] = 0;
   out_2613468595030008435[305] = 0;
   out_2613468595030008435[306] = 0;
   out_2613468595030008435[307] = 1.0;
   out_2613468595030008435[308] = 0;
   out_2613468595030008435[309] = 0;
   out_2613468595030008435[310] = 0;
   out_2613468595030008435[311] = 0;
   out_2613468595030008435[312] = 0;
   out_2613468595030008435[313] = 0;
   out_2613468595030008435[314] = 0;
   out_2613468595030008435[315] = 0;
   out_2613468595030008435[316] = 0;
   out_2613468595030008435[317] = 0;
   out_2613468595030008435[318] = 0;
   out_2613468595030008435[319] = 0;
   out_2613468595030008435[320] = 0;
   out_2613468595030008435[321] = 0;
   out_2613468595030008435[322] = 0;
   out_2613468595030008435[323] = 0;
   out_2613468595030008435[324] = 0;
   out_2613468595030008435[325] = 0;
   out_2613468595030008435[326] = 0;
   out_2613468595030008435[327] = 0;
   out_2613468595030008435[328] = 0;
   out_2613468595030008435[329] = 1.0;
   out_2613468595030008435[330] = 0;
   out_2613468595030008435[331] = 0;
   out_2613468595030008435[332] = 0;
   out_2613468595030008435[333] = 0;
   out_2613468595030008435[334] = 0;
   out_2613468595030008435[335] = 0;
   out_2613468595030008435[336] = 0;
   out_2613468595030008435[337] = 0;
   out_2613468595030008435[338] = 0;
   out_2613468595030008435[339] = 0;
   out_2613468595030008435[340] = 0;
   out_2613468595030008435[341] = 0;
   out_2613468595030008435[342] = 0;
   out_2613468595030008435[343] = 0;
   out_2613468595030008435[344] = 0;
   out_2613468595030008435[345] = 0;
   out_2613468595030008435[346] = 0;
   out_2613468595030008435[347] = 0;
   out_2613468595030008435[348] = 0;
   out_2613468595030008435[349] = 0;
   out_2613468595030008435[350] = 0;
   out_2613468595030008435[351] = 1.0;
   out_2613468595030008435[352] = 0;
   out_2613468595030008435[353] = 0;
   out_2613468595030008435[354] = 0;
   out_2613468595030008435[355] = 0;
   out_2613468595030008435[356] = 0;
   out_2613468595030008435[357] = 0;
   out_2613468595030008435[358] = 0;
   out_2613468595030008435[359] = 0;
   out_2613468595030008435[360] = 0;
   out_2613468595030008435[361] = 0;
   out_2613468595030008435[362] = 0;
   out_2613468595030008435[363] = 0;
   out_2613468595030008435[364] = 0;
   out_2613468595030008435[365] = 0;
   out_2613468595030008435[366] = 0;
   out_2613468595030008435[367] = 0;
   out_2613468595030008435[368] = 0;
   out_2613468595030008435[369] = 0;
   out_2613468595030008435[370] = 0;
   out_2613468595030008435[371] = 0;
   out_2613468595030008435[372] = 0;
   out_2613468595030008435[373] = 1.0;
   out_2613468595030008435[374] = 0;
   out_2613468595030008435[375] = 0;
   out_2613468595030008435[376] = 0;
   out_2613468595030008435[377] = 0;
   out_2613468595030008435[378] = 0;
   out_2613468595030008435[379] = 0;
   out_2613468595030008435[380] = 0;
   out_2613468595030008435[381] = 0;
   out_2613468595030008435[382] = 0;
   out_2613468595030008435[383] = 0;
   out_2613468595030008435[384] = 0;
   out_2613468595030008435[385] = 0;
   out_2613468595030008435[386] = 0;
   out_2613468595030008435[387] = 0;
   out_2613468595030008435[388] = 0;
   out_2613468595030008435[389] = 0;
   out_2613468595030008435[390] = 0;
   out_2613468595030008435[391] = 0;
   out_2613468595030008435[392] = 0;
   out_2613468595030008435[393] = 0;
   out_2613468595030008435[394] = 0;
   out_2613468595030008435[395] = 1.0;
   out_2613468595030008435[396] = 0;
   out_2613468595030008435[397] = 0;
   out_2613468595030008435[398] = 0;
   out_2613468595030008435[399] = 0;
   out_2613468595030008435[400] = 0;
   out_2613468595030008435[401] = 0;
   out_2613468595030008435[402] = 0;
   out_2613468595030008435[403] = 0;
   out_2613468595030008435[404] = 0;
   out_2613468595030008435[405] = 0;
   out_2613468595030008435[406] = 0;
   out_2613468595030008435[407] = 0;
   out_2613468595030008435[408] = 0;
   out_2613468595030008435[409] = 0;
   out_2613468595030008435[410] = 0;
   out_2613468595030008435[411] = 0;
   out_2613468595030008435[412] = 0;
   out_2613468595030008435[413] = 0;
   out_2613468595030008435[414] = 0;
   out_2613468595030008435[415] = 0;
   out_2613468595030008435[416] = 0;
   out_2613468595030008435[417] = 1.0;
   out_2613468595030008435[418] = 0;
   out_2613468595030008435[419] = 0;
   out_2613468595030008435[420] = 0;
   out_2613468595030008435[421] = 0;
   out_2613468595030008435[422] = 0;
   out_2613468595030008435[423] = 0;
   out_2613468595030008435[424] = 0;
   out_2613468595030008435[425] = 0;
   out_2613468595030008435[426] = 0;
   out_2613468595030008435[427] = 0;
   out_2613468595030008435[428] = 0;
   out_2613468595030008435[429] = 0;
   out_2613468595030008435[430] = 0;
   out_2613468595030008435[431] = 0;
   out_2613468595030008435[432] = 0;
   out_2613468595030008435[433] = 0;
   out_2613468595030008435[434] = 0;
   out_2613468595030008435[435] = 0;
   out_2613468595030008435[436] = 0;
   out_2613468595030008435[437] = 0;
   out_2613468595030008435[438] = 0;
   out_2613468595030008435[439] = 1.0;
   out_2613468595030008435[440] = 0;
   out_2613468595030008435[441] = 0;
   out_2613468595030008435[442] = 0;
   out_2613468595030008435[443] = 0;
   out_2613468595030008435[444] = 0;
   out_2613468595030008435[445] = 0;
   out_2613468595030008435[446] = 0;
   out_2613468595030008435[447] = 0;
   out_2613468595030008435[448] = 0;
   out_2613468595030008435[449] = 0;
   out_2613468595030008435[450] = 0;
   out_2613468595030008435[451] = 0;
   out_2613468595030008435[452] = 0;
   out_2613468595030008435[453] = 0;
   out_2613468595030008435[454] = 0;
   out_2613468595030008435[455] = 0;
   out_2613468595030008435[456] = 0;
   out_2613468595030008435[457] = 0;
   out_2613468595030008435[458] = 0;
   out_2613468595030008435[459] = 0;
   out_2613468595030008435[460] = 0;
   out_2613468595030008435[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5656405977393980005) {
   out_5656405977393980005[0] = dt*state[7] + state[0];
   out_5656405977393980005[1] = dt*state[8] + state[1];
   out_5656405977393980005[2] = dt*state[9] + state[2];
   out_5656405977393980005[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5656405977393980005[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5656405977393980005[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5656405977393980005[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5656405977393980005[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5656405977393980005[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5656405977393980005[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5656405977393980005[10] = state[10];
   out_5656405977393980005[11] = state[11];
   out_5656405977393980005[12] = state[12];
   out_5656405977393980005[13] = state[13];
   out_5656405977393980005[14] = state[14];
   out_5656405977393980005[15] = state[15];
   out_5656405977393980005[16] = state[16];
   out_5656405977393980005[17] = state[17];
   out_5656405977393980005[18] = state[18];
   out_5656405977393980005[19] = state[19];
   out_5656405977393980005[20] = state[20];
   out_5656405977393980005[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4808132447777396135) {
   out_4808132447777396135[0] = 1;
   out_4808132447777396135[1] = 0;
   out_4808132447777396135[2] = 0;
   out_4808132447777396135[3] = 0;
   out_4808132447777396135[4] = 0;
   out_4808132447777396135[5] = 0;
   out_4808132447777396135[6] = dt;
   out_4808132447777396135[7] = 0;
   out_4808132447777396135[8] = 0;
   out_4808132447777396135[9] = 0;
   out_4808132447777396135[10] = 0;
   out_4808132447777396135[11] = 0;
   out_4808132447777396135[12] = 0;
   out_4808132447777396135[13] = 0;
   out_4808132447777396135[14] = 0;
   out_4808132447777396135[15] = 0;
   out_4808132447777396135[16] = 0;
   out_4808132447777396135[17] = 0;
   out_4808132447777396135[18] = 0;
   out_4808132447777396135[19] = 0;
   out_4808132447777396135[20] = 0;
   out_4808132447777396135[21] = 0;
   out_4808132447777396135[22] = 1;
   out_4808132447777396135[23] = 0;
   out_4808132447777396135[24] = 0;
   out_4808132447777396135[25] = 0;
   out_4808132447777396135[26] = 0;
   out_4808132447777396135[27] = 0;
   out_4808132447777396135[28] = dt;
   out_4808132447777396135[29] = 0;
   out_4808132447777396135[30] = 0;
   out_4808132447777396135[31] = 0;
   out_4808132447777396135[32] = 0;
   out_4808132447777396135[33] = 0;
   out_4808132447777396135[34] = 0;
   out_4808132447777396135[35] = 0;
   out_4808132447777396135[36] = 0;
   out_4808132447777396135[37] = 0;
   out_4808132447777396135[38] = 0;
   out_4808132447777396135[39] = 0;
   out_4808132447777396135[40] = 0;
   out_4808132447777396135[41] = 0;
   out_4808132447777396135[42] = 0;
   out_4808132447777396135[43] = 0;
   out_4808132447777396135[44] = 1;
   out_4808132447777396135[45] = 0;
   out_4808132447777396135[46] = 0;
   out_4808132447777396135[47] = 0;
   out_4808132447777396135[48] = 0;
   out_4808132447777396135[49] = 0;
   out_4808132447777396135[50] = dt;
   out_4808132447777396135[51] = 0;
   out_4808132447777396135[52] = 0;
   out_4808132447777396135[53] = 0;
   out_4808132447777396135[54] = 0;
   out_4808132447777396135[55] = 0;
   out_4808132447777396135[56] = 0;
   out_4808132447777396135[57] = 0;
   out_4808132447777396135[58] = 0;
   out_4808132447777396135[59] = 0;
   out_4808132447777396135[60] = 0;
   out_4808132447777396135[61] = 0;
   out_4808132447777396135[62] = 0;
   out_4808132447777396135[63] = 0;
   out_4808132447777396135[64] = 0;
   out_4808132447777396135[65] = 0;
   out_4808132447777396135[66] = 1;
   out_4808132447777396135[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4808132447777396135[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4808132447777396135[69] = 0;
   out_4808132447777396135[70] = 0;
   out_4808132447777396135[71] = 0;
   out_4808132447777396135[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4808132447777396135[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4808132447777396135[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4808132447777396135[75] = 0;
   out_4808132447777396135[76] = 0;
   out_4808132447777396135[77] = 0;
   out_4808132447777396135[78] = 0;
   out_4808132447777396135[79] = 0;
   out_4808132447777396135[80] = 0;
   out_4808132447777396135[81] = 0;
   out_4808132447777396135[82] = 0;
   out_4808132447777396135[83] = 0;
   out_4808132447777396135[84] = 0;
   out_4808132447777396135[85] = 0;
   out_4808132447777396135[86] = 0;
   out_4808132447777396135[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4808132447777396135[88] = 1;
   out_4808132447777396135[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4808132447777396135[90] = 0;
   out_4808132447777396135[91] = 0;
   out_4808132447777396135[92] = 0;
   out_4808132447777396135[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4808132447777396135[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4808132447777396135[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4808132447777396135[96] = 0;
   out_4808132447777396135[97] = 0;
   out_4808132447777396135[98] = 0;
   out_4808132447777396135[99] = 0;
   out_4808132447777396135[100] = 0;
   out_4808132447777396135[101] = 0;
   out_4808132447777396135[102] = 0;
   out_4808132447777396135[103] = 0;
   out_4808132447777396135[104] = 0;
   out_4808132447777396135[105] = 0;
   out_4808132447777396135[106] = 0;
   out_4808132447777396135[107] = 0;
   out_4808132447777396135[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4808132447777396135[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4808132447777396135[110] = 1;
   out_4808132447777396135[111] = 0;
   out_4808132447777396135[112] = 0;
   out_4808132447777396135[113] = 0;
   out_4808132447777396135[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4808132447777396135[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4808132447777396135[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4808132447777396135[117] = 0;
   out_4808132447777396135[118] = 0;
   out_4808132447777396135[119] = 0;
   out_4808132447777396135[120] = 0;
   out_4808132447777396135[121] = 0;
   out_4808132447777396135[122] = 0;
   out_4808132447777396135[123] = 0;
   out_4808132447777396135[124] = 0;
   out_4808132447777396135[125] = 0;
   out_4808132447777396135[126] = 0;
   out_4808132447777396135[127] = 0;
   out_4808132447777396135[128] = 0;
   out_4808132447777396135[129] = 0;
   out_4808132447777396135[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4808132447777396135[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4808132447777396135[132] = 1;
   out_4808132447777396135[133] = 0;
   out_4808132447777396135[134] = 0;
   out_4808132447777396135[135] = 0;
   out_4808132447777396135[136] = 0;
   out_4808132447777396135[137] = 0;
   out_4808132447777396135[138] = 0;
   out_4808132447777396135[139] = 0;
   out_4808132447777396135[140] = 0;
   out_4808132447777396135[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4808132447777396135[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4808132447777396135[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4808132447777396135[144] = 0;
   out_4808132447777396135[145] = 0;
   out_4808132447777396135[146] = 0;
   out_4808132447777396135[147] = 0;
   out_4808132447777396135[148] = 0;
   out_4808132447777396135[149] = 0;
   out_4808132447777396135[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4808132447777396135[151] = 0;
   out_4808132447777396135[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4808132447777396135[153] = 0;
   out_4808132447777396135[154] = 1;
   out_4808132447777396135[155] = 0;
   out_4808132447777396135[156] = 0;
   out_4808132447777396135[157] = 0;
   out_4808132447777396135[158] = 0;
   out_4808132447777396135[159] = 0;
   out_4808132447777396135[160] = 0;
   out_4808132447777396135[161] = 0;
   out_4808132447777396135[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4808132447777396135[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4808132447777396135[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4808132447777396135[165] = 0;
   out_4808132447777396135[166] = 0;
   out_4808132447777396135[167] = 0;
   out_4808132447777396135[168] = 0;
   out_4808132447777396135[169] = 0;
   out_4808132447777396135[170] = 0;
   out_4808132447777396135[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4808132447777396135[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4808132447777396135[173] = 0;
   out_4808132447777396135[174] = 0;
   out_4808132447777396135[175] = 0;
   out_4808132447777396135[176] = 1;
   out_4808132447777396135[177] = 0;
   out_4808132447777396135[178] = 0;
   out_4808132447777396135[179] = 0;
   out_4808132447777396135[180] = 0;
   out_4808132447777396135[181] = 0;
   out_4808132447777396135[182] = 0;
   out_4808132447777396135[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4808132447777396135[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4808132447777396135[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4808132447777396135[186] = 0;
   out_4808132447777396135[187] = 0;
   out_4808132447777396135[188] = 0;
   out_4808132447777396135[189] = 0;
   out_4808132447777396135[190] = 0;
   out_4808132447777396135[191] = 0;
   out_4808132447777396135[192] = 0;
   out_4808132447777396135[193] = 0;
   out_4808132447777396135[194] = 0;
   out_4808132447777396135[195] = 0;
   out_4808132447777396135[196] = 0;
   out_4808132447777396135[197] = 0;
   out_4808132447777396135[198] = 1;
   out_4808132447777396135[199] = 0;
   out_4808132447777396135[200] = 0;
   out_4808132447777396135[201] = 0;
   out_4808132447777396135[202] = 0;
   out_4808132447777396135[203] = 0;
   out_4808132447777396135[204] = 0;
   out_4808132447777396135[205] = 0;
   out_4808132447777396135[206] = 0;
   out_4808132447777396135[207] = 0;
   out_4808132447777396135[208] = 0;
   out_4808132447777396135[209] = 0;
   out_4808132447777396135[210] = 0;
   out_4808132447777396135[211] = 0;
   out_4808132447777396135[212] = 0;
   out_4808132447777396135[213] = 0;
   out_4808132447777396135[214] = 0;
   out_4808132447777396135[215] = 0;
   out_4808132447777396135[216] = 0;
   out_4808132447777396135[217] = 0;
   out_4808132447777396135[218] = 0;
   out_4808132447777396135[219] = 0;
   out_4808132447777396135[220] = 1;
   out_4808132447777396135[221] = 0;
   out_4808132447777396135[222] = 0;
   out_4808132447777396135[223] = 0;
   out_4808132447777396135[224] = 0;
   out_4808132447777396135[225] = 0;
   out_4808132447777396135[226] = 0;
   out_4808132447777396135[227] = 0;
   out_4808132447777396135[228] = 0;
   out_4808132447777396135[229] = 0;
   out_4808132447777396135[230] = 0;
   out_4808132447777396135[231] = 0;
   out_4808132447777396135[232] = 0;
   out_4808132447777396135[233] = 0;
   out_4808132447777396135[234] = 0;
   out_4808132447777396135[235] = 0;
   out_4808132447777396135[236] = 0;
   out_4808132447777396135[237] = 0;
   out_4808132447777396135[238] = 0;
   out_4808132447777396135[239] = 0;
   out_4808132447777396135[240] = 0;
   out_4808132447777396135[241] = 0;
   out_4808132447777396135[242] = 1;
   out_4808132447777396135[243] = 0;
   out_4808132447777396135[244] = 0;
   out_4808132447777396135[245] = 0;
   out_4808132447777396135[246] = 0;
   out_4808132447777396135[247] = 0;
   out_4808132447777396135[248] = 0;
   out_4808132447777396135[249] = 0;
   out_4808132447777396135[250] = 0;
   out_4808132447777396135[251] = 0;
   out_4808132447777396135[252] = 0;
   out_4808132447777396135[253] = 0;
   out_4808132447777396135[254] = 0;
   out_4808132447777396135[255] = 0;
   out_4808132447777396135[256] = 0;
   out_4808132447777396135[257] = 0;
   out_4808132447777396135[258] = 0;
   out_4808132447777396135[259] = 0;
   out_4808132447777396135[260] = 0;
   out_4808132447777396135[261] = 0;
   out_4808132447777396135[262] = 0;
   out_4808132447777396135[263] = 0;
   out_4808132447777396135[264] = 1;
   out_4808132447777396135[265] = 0;
   out_4808132447777396135[266] = 0;
   out_4808132447777396135[267] = 0;
   out_4808132447777396135[268] = 0;
   out_4808132447777396135[269] = 0;
   out_4808132447777396135[270] = 0;
   out_4808132447777396135[271] = 0;
   out_4808132447777396135[272] = 0;
   out_4808132447777396135[273] = 0;
   out_4808132447777396135[274] = 0;
   out_4808132447777396135[275] = 0;
   out_4808132447777396135[276] = 0;
   out_4808132447777396135[277] = 0;
   out_4808132447777396135[278] = 0;
   out_4808132447777396135[279] = 0;
   out_4808132447777396135[280] = 0;
   out_4808132447777396135[281] = 0;
   out_4808132447777396135[282] = 0;
   out_4808132447777396135[283] = 0;
   out_4808132447777396135[284] = 0;
   out_4808132447777396135[285] = 0;
   out_4808132447777396135[286] = 1;
   out_4808132447777396135[287] = 0;
   out_4808132447777396135[288] = 0;
   out_4808132447777396135[289] = 0;
   out_4808132447777396135[290] = 0;
   out_4808132447777396135[291] = 0;
   out_4808132447777396135[292] = 0;
   out_4808132447777396135[293] = 0;
   out_4808132447777396135[294] = 0;
   out_4808132447777396135[295] = 0;
   out_4808132447777396135[296] = 0;
   out_4808132447777396135[297] = 0;
   out_4808132447777396135[298] = 0;
   out_4808132447777396135[299] = 0;
   out_4808132447777396135[300] = 0;
   out_4808132447777396135[301] = 0;
   out_4808132447777396135[302] = 0;
   out_4808132447777396135[303] = 0;
   out_4808132447777396135[304] = 0;
   out_4808132447777396135[305] = 0;
   out_4808132447777396135[306] = 0;
   out_4808132447777396135[307] = 0;
   out_4808132447777396135[308] = 1;
   out_4808132447777396135[309] = 0;
   out_4808132447777396135[310] = 0;
   out_4808132447777396135[311] = 0;
   out_4808132447777396135[312] = 0;
   out_4808132447777396135[313] = 0;
   out_4808132447777396135[314] = 0;
   out_4808132447777396135[315] = 0;
   out_4808132447777396135[316] = 0;
   out_4808132447777396135[317] = 0;
   out_4808132447777396135[318] = 0;
   out_4808132447777396135[319] = 0;
   out_4808132447777396135[320] = 0;
   out_4808132447777396135[321] = 0;
   out_4808132447777396135[322] = 0;
   out_4808132447777396135[323] = 0;
   out_4808132447777396135[324] = 0;
   out_4808132447777396135[325] = 0;
   out_4808132447777396135[326] = 0;
   out_4808132447777396135[327] = 0;
   out_4808132447777396135[328] = 0;
   out_4808132447777396135[329] = 0;
   out_4808132447777396135[330] = 1;
   out_4808132447777396135[331] = 0;
   out_4808132447777396135[332] = 0;
   out_4808132447777396135[333] = 0;
   out_4808132447777396135[334] = 0;
   out_4808132447777396135[335] = 0;
   out_4808132447777396135[336] = 0;
   out_4808132447777396135[337] = 0;
   out_4808132447777396135[338] = 0;
   out_4808132447777396135[339] = 0;
   out_4808132447777396135[340] = 0;
   out_4808132447777396135[341] = 0;
   out_4808132447777396135[342] = 0;
   out_4808132447777396135[343] = 0;
   out_4808132447777396135[344] = 0;
   out_4808132447777396135[345] = 0;
   out_4808132447777396135[346] = 0;
   out_4808132447777396135[347] = 0;
   out_4808132447777396135[348] = 0;
   out_4808132447777396135[349] = 0;
   out_4808132447777396135[350] = 0;
   out_4808132447777396135[351] = 0;
   out_4808132447777396135[352] = 1;
   out_4808132447777396135[353] = 0;
   out_4808132447777396135[354] = 0;
   out_4808132447777396135[355] = 0;
   out_4808132447777396135[356] = 0;
   out_4808132447777396135[357] = 0;
   out_4808132447777396135[358] = 0;
   out_4808132447777396135[359] = 0;
   out_4808132447777396135[360] = 0;
   out_4808132447777396135[361] = 0;
   out_4808132447777396135[362] = 0;
   out_4808132447777396135[363] = 0;
   out_4808132447777396135[364] = 0;
   out_4808132447777396135[365] = 0;
   out_4808132447777396135[366] = 0;
   out_4808132447777396135[367] = 0;
   out_4808132447777396135[368] = 0;
   out_4808132447777396135[369] = 0;
   out_4808132447777396135[370] = 0;
   out_4808132447777396135[371] = 0;
   out_4808132447777396135[372] = 0;
   out_4808132447777396135[373] = 0;
   out_4808132447777396135[374] = 1;
   out_4808132447777396135[375] = 0;
   out_4808132447777396135[376] = 0;
   out_4808132447777396135[377] = 0;
   out_4808132447777396135[378] = 0;
   out_4808132447777396135[379] = 0;
   out_4808132447777396135[380] = 0;
   out_4808132447777396135[381] = 0;
   out_4808132447777396135[382] = 0;
   out_4808132447777396135[383] = 0;
   out_4808132447777396135[384] = 0;
   out_4808132447777396135[385] = 0;
   out_4808132447777396135[386] = 0;
   out_4808132447777396135[387] = 0;
   out_4808132447777396135[388] = 0;
   out_4808132447777396135[389] = 0;
   out_4808132447777396135[390] = 0;
   out_4808132447777396135[391] = 0;
   out_4808132447777396135[392] = 0;
   out_4808132447777396135[393] = 0;
   out_4808132447777396135[394] = 0;
   out_4808132447777396135[395] = 0;
   out_4808132447777396135[396] = 1;
   out_4808132447777396135[397] = 0;
   out_4808132447777396135[398] = 0;
   out_4808132447777396135[399] = 0;
   out_4808132447777396135[400] = 0;
   out_4808132447777396135[401] = 0;
   out_4808132447777396135[402] = 0;
   out_4808132447777396135[403] = 0;
   out_4808132447777396135[404] = 0;
   out_4808132447777396135[405] = 0;
   out_4808132447777396135[406] = 0;
   out_4808132447777396135[407] = 0;
   out_4808132447777396135[408] = 0;
   out_4808132447777396135[409] = 0;
   out_4808132447777396135[410] = 0;
   out_4808132447777396135[411] = 0;
   out_4808132447777396135[412] = 0;
   out_4808132447777396135[413] = 0;
   out_4808132447777396135[414] = 0;
   out_4808132447777396135[415] = 0;
   out_4808132447777396135[416] = 0;
   out_4808132447777396135[417] = 0;
   out_4808132447777396135[418] = 1;
   out_4808132447777396135[419] = 0;
   out_4808132447777396135[420] = 0;
   out_4808132447777396135[421] = 0;
   out_4808132447777396135[422] = 0;
   out_4808132447777396135[423] = 0;
   out_4808132447777396135[424] = 0;
   out_4808132447777396135[425] = 0;
   out_4808132447777396135[426] = 0;
   out_4808132447777396135[427] = 0;
   out_4808132447777396135[428] = 0;
   out_4808132447777396135[429] = 0;
   out_4808132447777396135[430] = 0;
   out_4808132447777396135[431] = 0;
   out_4808132447777396135[432] = 0;
   out_4808132447777396135[433] = 0;
   out_4808132447777396135[434] = 0;
   out_4808132447777396135[435] = 0;
   out_4808132447777396135[436] = 0;
   out_4808132447777396135[437] = 0;
   out_4808132447777396135[438] = 0;
   out_4808132447777396135[439] = 0;
   out_4808132447777396135[440] = 1;
}
void h_4(double *state, double *unused, double *out_6909017026966328284) {
   out_6909017026966328284[0] = state[10] + state[13];
   out_6909017026966328284[1] = state[11] + state[14];
   out_6909017026966328284[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5318369041649147725) {
   out_5318369041649147725[0] = 0;
   out_5318369041649147725[1] = 0;
   out_5318369041649147725[2] = 0;
   out_5318369041649147725[3] = 0;
   out_5318369041649147725[4] = 0;
   out_5318369041649147725[5] = 0;
   out_5318369041649147725[6] = 0;
   out_5318369041649147725[7] = 0;
   out_5318369041649147725[8] = 0;
   out_5318369041649147725[9] = 0;
   out_5318369041649147725[10] = 1;
   out_5318369041649147725[11] = 0;
   out_5318369041649147725[12] = 0;
   out_5318369041649147725[13] = 1;
   out_5318369041649147725[14] = 0;
   out_5318369041649147725[15] = 0;
   out_5318369041649147725[16] = 0;
   out_5318369041649147725[17] = 0;
   out_5318369041649147725[18] = 0;
   out_5318369041649147725[19] = 0;
   out_5318369041649147725[20] = 0;
   out_5318369041649147725[21] = 0;
   out_5318369041649147725[22] = 0;
   out_5318369041649147725[23] = 0;
   out_5318369041649147725[24] = 0;
   out_5318369041649147725[25] = 0;
   out_5318369041649147725[26] = 0;
   out_5318369041649147725[27] = 0;
   out_5318369041649147725[28] = 0;
   out_5318369041649147725[29] = 0;
   out_5318369041649147725[30] = 0;
   out_5318369041649147725[31] = 0;
   out_5318369041649147725[32] = 0;
   out_5318369041649147725[33] = 1;
   out_5318369041649147725[34] = 0;
   out_5318369041649147725[35] = 0;
   out_5318369041649147725[36] = 1;
   out_5318369041649147725[37] = 0;
   out_5318369041649147725[38] = 0;
   out_5318369041649147725[39] = 0;
   out_5318369041649147725[40] = 0;
   out_5318369041649147725[41] = 0;
   out_5318369041649147725[42] = 0;
   out_5318369041649147725[43] = 0;
   out_5318369041649147725[44] = 0;
   out_5318369041649147725[45] = 0;
   out_5318369041649147725[46] = 0;
   out_5318369041649147725[47] = 0;
   out_5318369041649147725[48] = 0;
   out_5318369041649147725[49] = 0;
   out_5318369041649147725[50] = 0;
   out_5318369041649147725[51] = 0;
   out_5318369041649147725[52] = 0;
   out_5318369041649147725[53] = 0;
   out_5318369041649147725[54] = 0;
   out_5318369041649147725[55] = 0;
   out_5318369041649147725[56] = 1;
   out_5318369041649147725[57] = 0;
   out_5318369041649147725[58] = 0;
   out_5318369041649147725[59] = 1;
   out_5318369041649147725[60] = 0;
   out_5318369041649147725[61] = 0;
   out_5318369041649147725[62] = 0;
   out_5318369041649147725[63] = 0;
   out_5318369041649147725[64] = 0;
   out_5318369041649147725[65] = 0;
}
void h_9(double *state, double *unused, double *out_4067103874151876147) {
   out_4067103874151876147[0] = state[10];
   out_4067103874151876147[1] = state[11];
   out_4067103874151876147[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5841156096795956421) {
   out_5841156096795956421[0] = 0;
   out_5841156096795956421[1] = 0;
   out_5841156096795956421[2] = 0;
   out_5841156096795956421[3] = 0;
   out_5841156096795956421[4] = 0;
   out_5841156096795956421[5] = 0;
   out_5841156096795956421[6] = 0;
   out_5841156096795956421[7] = 0;
   out_5841156096795956421[8] = 0;
   out_5841156096795956421[9] = 0;
   out_5841156096795956421[10] = 1;
   out_5841156096795956421[11] = 0;
   out_5841156096795956421[12] = 0;
   out_5841156096795956421[13] = 0;
   out_5841156096795956421[14] = 0;
   out_5841156096795956421[15] = 0;
   out_5841156096795956421[16] = 0;
   out_5841156096795956421[17] = 0;
   out_5841156096795956421[18] = 0;
   out_5841156096795956421[19] = 0;
   out_5841156096795956421[20] = 0;
   out_5841156096795956421[21] = 0;
   out_5841156096795956421[22] = 0;
   out_5841156096795956421[23] = 0;
   out_5841156096795956421[24] = 0;
   out_5841156096795956421[25] = 0;
   out_5841156096795956421[26] = 0;
   out_5841156096795956421[27] = 0;
   out_5841156096795956421[28] = 0;
   out_5841156096795956421[29] = 0;
   out_5841156096795956421[30] = 0;
   out_5841156096795956421[31] = 0;
   out_5841156096795956421[32] = 0;
   out_5841156096795956421[33] = 1;
   out_5841156096795956421[34] = 0;
   out_5841156096795956421[35] = 0;
   out_5841156096795956421[36] = 0;
   out_5841156096795956421[37] = 0;
   out_5841156096795956421[38] = 0;
   out_5841156096795956421[39] = 0;
   out_5841156096795956421[40] = 0;
   out_5841156096795956421[41] = 0;
   out_5841156096795956421[42] = 0;
   out_5841156096795956421[43] = 0;
   out_5841156096795956421[44] = 0;
   out_5841156096795956421[45] = 0;
   out_5841156096795956421[46] = 0;
   out_5841156096795956421[47] = 0;
   out_5841156096795956421[48] = 0;
   out_5841156096795956421[49] = 0;
   out_5841156096795956421[50] = 0;
   out_5841156096795956421[51] = 0;
   out_5841156096795956421[52] = 0;
   out_5841156096795956421[53] = 0;
   out_5841156096795956421[54] = 0;
   out_5841156096795956421[55] = 0;
   out_5841156096795956421[56] = 1;
   out_5841156096795956421[57] = 0;
   out_5841156096795956421[58] = 0;
   out_5841156096795956421[59] = 0;
   out_5841156096795956421[60] = 0;
   out_5841156096795956421[61] = 0;
   out_5841156096795956421[62] = 0;
   out_5841156096795956421[63] = 0;
   out_5841156096795956421[64] = 0;
   out_5841156096795956421[65] = 0;
}
void h_10(double *state, double *unused, double *out_878258855426047000) {
   out_878258855426047000[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_878258855426047000[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_878258855426047000[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4001703992801318308) {
   out_4001703992801318308[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4001703992801318308[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4001703992801318308[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4001703992801318308[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4001703992801318308[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4001703992801318308[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4001703992801318308[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4001703992801318308[7] = 0;
   out_4001703992801318308[8] = 0;
   out_4001703992801318308[9] = 0;
   out_4001703992801318308[10] = 0;
   out_4001703992801318308[11] = 0;
   out_4001703992801318308[12] = 0;
   out_4001703992801318308[13] = 0;
   out_4001703992801318308[14] = 0;
   out_4001703992801318308[15] = 0;
   out_4001703992801318308[16] = 1;
   out_4001703992801318308[17] = 0;
   out_4001703992801318308[18] = 0;
   out_4001703992801318308[19] = 1;
   out_4001703992801318308[20] = 0;
   out_4001703992801318308[21] = 0;
   out_4001703992801318308[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4001703992801318308[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4001703992801318308[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4001703992801318308[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4001703992801318308[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4001703992801318308[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4001703992801318308[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4001703992801318308[29] = 0;
   out_4001703992801318308[30] = 0;
   out_4001703992801318308[31] = 0;
   out_4001703992801318308[32] = 0;
   out_4001703992801318308[33] = 0;
   out_4001703992801318308[34] = 0;
   out_4001703992801318308[35] = 0;
   out_4001703992801318308[36] = 0;
   out_4001703992801318308[37] = 0;
   out_4001703992801318308[38] = 0;
   out_4001703992801318308[39] = 1;
   out_4001703992801318308[40] = 0;
   out_4001703992801318308[41] = 0;
   out_4001703992801318308[42] = 1;
   out_4001703992801318308[43] = 0;
   out_4001703992801318308[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4001703992801318308[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4001703992801318308[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4001703992801318308[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4001703992801318308[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4001703992801318308[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4001703992801318308[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4001703992801318308[51] = 0;
   out_4001703992801318308[52] = 0;
   out_4001703992801318308[53] = 0;
   out_4001703992801318308[54] = 0;
   out_4001703992801318308[55] = 0;
   out_4001703992801318308[56] = 0;
   out_4001703992801318308[57] = 0;
   out_4001703992801318308[58] = 0;
   out_4001703992801318308[59] = 0;
   out_4001703992801318308[60] = 0;
   out_4001703992801318308[61] = 0;
   out_4001703992801318308[62] = 1;
   out_4001703992801318308[63] = 0;
   out_4001703992801318308[64] = 0;
   out_4001703992801318308[65] = 1;
}
void h_12(double *state, double *unused, double *out_4904646255259357299) {
   out_4904646255259357299[0] = state[0];
   out_4904646255259357299[1] = state[1];
   out_4904646255259357299[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8108918624028442096) {
   out_8108918624028442096[0] = 1;
   out_8108918624028442096[1] = 0;
   out_8108918624028442096[2] = 0;
   out_8108918624028442096[3] = 0;
   out_8108918624028442096[4] = 0;
   out_8108918624028442096[5] = 0;
   out_8108918624028442096[6] = 0;
   out_8108918624028442096[7] = 0;
   out_8108918624028442096[8] = 0;
   out_8108918624028442096[9] = 0;
   out_8108918624028442096[10] = 0;
   out_8108918624028442096[11] = 0;
   out_8108918624028442096[12] = 0;
   out_8108918624028442096[13] = 0;
   out_8108918624028442096[14] = 0;
   out_8108918624028442096[15] = 0;
   out_8108918624028442096[16] = 0;
   out_8108918624028442096[17] = 0;
   out_8108918624028442096[18] = 0;
   out_8108918624028442096[19] = 0;
   out_8108918624028442096[20] = 0;
   out_8108918624028442096[21] = 0;
   out_8108918624028442096[22] = 0;
   out_8108918624028442096[23] = 1;
   out_8108918624028442096[24] = 0;
   out_8108918624028442096[25] = 0;
   out_8108918624028442096[26] = 0;
   out_8108918624028442096[27] = 0;
   out_8108918624028442096[28] = 0;
   out_8108918624028442096[29] = 0;
   out_8108918624028442096[30] = 0;
   out_8108918624028442096[31] = 0;
   out_8108918624028442096[32] = 0;
   out_8108918624028442096[33] = 0;
   out_8108918624028442096[34] = 0;
   out_8108918624028442096[35] = 0;
   out_8108918624028442096[36] = 0;
   out_8108918624028442096[37] = 0;
   out_8108918624028442096[38] = 0;
   out_8108918624028442096[39] = 0;
   out_8108918624028442096[40] = 0;
   out_8108918624028442096[41] = 0;
   out_8108918624028442096[42] = 0;
   out_8108918624028442096[43] = 0;
   out_8108918624028442096[44] = 0;
   out_8108918624028442096[45] = 0;
   out_8108918624028442096[46] = 1;
   out_8108918624028442096[47] = 0;
   out_8108918624028442096[48] = 0;
   out_8108918624028442096[49] = 0;
   out_8108918624028442096[50] = 0;
   out_8108918624028442096[51] = 0;
   out_8108918624028442096[52] = 0;
   out_8108918624028442096[53] = 0;
   out_8108918624028442096[54] = 0;
   out_8108918624028442096[55] = 0;
   out_8108918624028442096[56] = 0;
   out_8108918624028442096[57] = 0;
   out_8108918624028442096[58] = 0;
   out_8108918624028442096[59] = 0;
   out_8108918624028442096[60] = 0;
   out_8108918624028442096[61] = 0;
   out_8108918624028442096[62] = 0;
   out_8108918624028442096[63] = 0;
   out_8108918624028442096[64] = 0;
   out_8108918624028442096[65] = 0;
}
void h_35(double *state, double *unused, double *out_3108800339151075316) {
   out_3108800339151075316[0] = state[7];
   out_3108800339151075316[1] = state[8];
   out_3108800339151075316[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8685031099021755101) {
   out_8685031099021755101[0] = 0;
   out_8685031099021755101[1] = 0;
   out_8685031099021755101[2] = 0;
   out_8685031099021755101[3] = 0;
   out_8685031099021755101[4] = 0;
   out_8685031099021755101[5] = 0;
   out_8685031099021755101[6] = 0;
   out_8685031099021755101[7] = 1;
   out_8685031099021755101[8] = 0;
   out_8685031099021755101[9] = 0;
   out_8685031099021755101[10] = 0;
   out_8685031099021755101[11] = 0;
   out_8685031099021755101[12] = 0;
   out_8685031099021755101[13] = 0;
   out_8685031099021755101[14] = 0;
   out_8685031099021755101[15] = 0;
   out_8685031099021755101[16] = 0;
   out_8685031099021755101[17] = 0;
   out_8685031099021755101[18] = 0;
   out_8685031099021755101[19] = 0;
   out_8685031099021755101[20] = 0;
   out_8685031099021755101[21] = 0;
   out_8685031099021755101[22] = 0;
   out_8685031099021755101[23] = 0;
   out_8685031099021755101[24] = 0;
   out_8685031099021755101[25] = 0;
   out_8685031099021755101[26] = 0;
   out_8685031099021755101[27] = 0;
   out_8685031099021755101[28] = 0;
   out_8685031099021755101[29] = 0;
   out_8685031099021755101[30] = 1;
   out_8685031099021755101[31] = 0;
   out_8685031099021755101[32] = 0;
   out_8685031099021755101[33] = 0;
   out_8685031099021755101[34] = 0;
   out_8685031099021755101[35] = 0;
   out_8685031099021755101[36] = 0;
   out_8685031099021755101[37] = 0;
   out_8685031099021755101[38] = 0;
   out_8685031099021755101[39] = 0;
   out_8685031099021755101[40] = 0;
   out_8685031099021755101[41] = 0;
   out_8685031099021755101[42] = 0;
   out_8685031099021755101[43] = 0;
   out_8685031099021755101[44] = 0;
   out_8685031099021755101[45] = 0;
   out_8685031099021755101[46] = 0;
   out_8685031099021755101[47] = 0;
   out_8685031099021755101[48] = 0;
   out_8685031099021755101[49] = 0;
   out_8685031099021755101[50] = 0;
   out_8685031099021755101[51] = 0;
   out_8685031099021755101[52] = 0;
   out_8685031099021755101[53] = 1;
   out_8685031099021755101[54] = 0;
   out_8685031099021755101[55] = 0;
   out_8685031099021755101[56] = 0;
   out_8685031099021755101[57] = 0;
   out_8685031099021755101[58] = 0;
   out_8685031099021755101[59] = 0;
   out_8685031099021755101[60] = 0;
   out_8685031099021755101[61] = 0;
   out_8685031099021755101[62] = 0;
   out_8685031099021755101[63] = 0;
   out_8685031099021755101[64] = 0;
   out_8685031099021755101[65] = 0;
}
void h_32(double *state, double *unused, double *out_7089824626637357349) {
   out_7089824626637357349[0] = state[3];
   out_7089824626637357349[1] = state[4];
   out_7089824626637357349[2] = state[5];
   out_7089824626637357349[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5675977286590873415) {
   out_5675977286590873415[0] = 0;
   out_5675977286590873415[1] = 0;
   out_5675977286590873415[2] = 0;
   out_5675977286590873415[3] = 1;
   out_5675977286590873415[4] = 0;
   out_5675977286590873415[5] = 0;
   out_5675977286590873415[6] = 0;
   out_5675977286590873415[7] = 0;
   out_5675977286590873415[8] = 0;
   out_5675977286590873415[9] = 0;
   out_5675977286590873415[10] = 0;
   out_5675977286590873415[11] = 0;
   out_5675977286590873415[12] = 0;
   out_5675977286590873415[13] = 0;
   out_5675977286590873415[14] = 0;
   out_5675977286590873415[15] = 0;
   out_5675977286590873415[16] = 0;
   out_5675977286590873415[17] = 0;
   out_5675977286590873415[18] = 0;
   out_5675977286590873415[19] = 0;
   out_5675977286590873415[20] = 0;
   out_5675977286590873415[21] = 0;
   out_5675977286590873415[22] = 0;
   out_5675977286590873415[23] = 0;
   out_5675977286590873415[24] = 0;
   out_5675977286590873415[25] = 0;
   out_5675977286590873415[26] = 1;
   out_5675977286590873415[27] = 0;
   out_5675977286590873415[28] = 0;
   out_5675977286590873415[29] = 0;
   out_5675977286590873415[30] = 0;
   out_5675977286590873415[31] = 0;
   out_5675977286590873415[32] = 0;
   out_5675977286590873415[33] = 0;
   out_5675977286590873415[34] = 0;
   out_5675977286590873415[35] = 0;
   out_5675977286590873415[36] = 0;
   out_5675977286590873415[37] = 0;
   out_5675977286590873415[38] = 0;
   out_5675977286590873415[39] = 0;
   out_5675977286590873415[40] = 0;
   out_5675977286590873415[41] = 0;
   out_5675977286590873415[42] = 0;
   out_5675977286590873415[43] = 0;
   out_5675977286590873415[44] = 0;
   out_5675977286590873415[45] = 0;
   out_5675977286590873415[46] = 0;
   out_5675977286590873415[47] = 0;
   out_5675977286590873415[48] = 0;
   out_5675977286590873415[49] = 1;
   out_5675977286590873415[50] = 0;
   out_5675977286590873415[51] = 0;
   out_5675977286590873415[52] = 0;
   out_5675977286590873415[53] = 0;
   out_5675977286590873415[54] = 0;
   out_5675977286590873415[55] = 0;
   out_5675977286590873415[56] = 0;
   out_5675977286590873415[57] = 0;
   out_5675977286590873415[58] = 0;
   out_5675977286590873415[59] = 0;
   out_5675977286590873415[60] = 0;
   out_5675977286590873415[61] = 0;
   out_5675977286590873415[62] = 0;
   out_5675977286590873415[63] = 0;
   out_5675977286590873415[64] = 0;
   out_5675977286590873415[65] = 0;
   out_5675977286590873415[66] = 0;
   out_5675977286590873415[67] = 0;
   out_5675977286590873415[68] = 0;
   out_5675977286590873415[69] = 0;
   out_5675977286590873415[70] = 0;
   out_5675977286590873415[71] = 0;
   out_5675977286590873415[72] = 1;
   out_5675977286590873415[73] = 0;
   out_5675977286590873415[74] = 0;
   out_5675977286590873415[75] = 0;
   out_5675977286590873415[76] = 0;
   out_5675977286590873415[77] = 0;
   out_5675977286590873415[78] = 0;
   out_5675977286590873415[79] = 0;
   out_5675977286590873415[80] = 0;
   out_5675977286590873415[81] = 0;
   out_5675977286590873415[82] = 0;
   out_5675977286590873415[83] = 0;
   out_5675977286590873415[84] = 0;
   out_5675977286590873415[85] = 0;
   out_5675977286590873415[86] = 0;
   out_5675977286590873415[87] = 0;
}
void h_13(double *state, double *unused, double *out_8589596162138588498) {
   out_8589596162138588498[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8589596162138588498[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8589596162138588498[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1342061494263837266) {
   out_1342061494263837266[0] = 0;
   out_1342061494263837266[1] = 0;
   out_1342061494263837266[2] = 0;
   out_1342061494263837266[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1342061494263837266[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1342061494263837266[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1342061494263837266[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1342061494263837266[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1342061494263837266[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1342061494263837266[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1342061494263837266[10] = 0;
   out_1342061494263837266[11] = 0;
   out_1342061494263837266[12] = 0;
   out_1342061494263837266[13] = 0;
   out_1342061494263837266[14] = 0;
   out_1342061494263837266[15] = 0;
   out_1342061494263837266[16] = 0;
   out_1342061494263837266[17] = 0;
   out_1342061494263837266[18] = 0;
   out_1342061494263837266[19] = 0;
   out_1342061494263837266[20] = 0;
   out_1342061494263837266[21] = 0;
   out_1342061494263837266[22] = 0;
   out_1342061494263837266[23] = 0;
   out_1342061494263837266[24] = 0;
   out_1342061494263837266[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1342061494263837266[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1342061494263837266[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1342061494263837266[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1342061494263837266[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1342061494263837266[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1342061494263837266[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1342061494263837266[32] = 0;
   out_1342061494263837266[33] = 0;
   out_1342061494263837266[34] = 0;
   out_1342061494263837266[35] = 0;
   out_1342061494263837266[36] = 0;
   out_1342061494263837266[37] = 0;
   out_1342061494263837266[38] = 0;
   out_1342061494263837266[39] = 0;
   out_1342061494263837266[40] = 0;
   out_1342061494263837266[41] = 0;
   out_1342061494263837266[42] = 0;
   out_1342061494263837266[43] = 0;
   out_1342061494263837266[44] = 0;
   out_1342061494263837266[45] = 0;
   out_1342061494263837266[46] = 0;
   out_1342061494263837266[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1342061494263837266[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1342061494263837266[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1342061494263837266[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1342061494263837266[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1342061494263837266[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1342061494263837266[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1342061494263837266[54] = 0;
   out_1342061494263837266[55] = 0;
   out_1342061494263837266[56] = 0;
   out_1342061494263837266[57] = 0;
   out_1342061494263837266[58] = 0;
   out_1342061494263837266[59] = 0;
   out_1342061494263837266[60] = 0;
   out_1342061494263837266[61] = 0;
   out_1342061494263837266[62] = 0;
   out_1342061494263837266[63] = 0;
   out_1342061494263837266[64] = 0;
   out_1342061494263837266[65] = 0;
}
void h_14(double *state, double *unused, double *out_4067103874151876147) {
   out_4067103874151876147[0] = state[10];
   out_4067103874151876147[1] = state[11];
   out_4067103874151876147[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5841156096795956421) {
   out_5841156096795956421[0] = 0;
   out_5841156096795956421[1] = 0;
   out_5841156096795956421[2] = 0;
   out_5841156096795956421[3] = 0;
   out_5841156096795956421[4] = 0;
   out_5841156096795956421[5] = 0;
   out_5841156096795956421[6] = 0;
   out_5841156096795956421[7] = 0;
   out_5841156096795956421[8] = 0;
   out_5841156096795956421[9] = 0;
   out_5841156096795956421[10] = 1;
   out_5841156096795956421[11] = 0;
   out_5841156096795956421[12] = 0;
   out_5841156096795956421[13] = 0;
   out_5841156096795956421[14] = 0;
   out_5841156096795956421[15] = 0;
   out_5841156096795956421[16] = 0;
   out_5841156096795956421[17] = 0;
   out_5841156096795956421[18] = 0;
   out_5841156096795956421[19] = 0;
   out_5841156096795956421[20] = 0;
   out_5841156096795956421[21] = 0;
   out_5841156096795956421[22] = 0;
   out_5841156096795956421[23] = 0;
   out_5841156096795956421[24] = 0;
   out_5841156096795956421[25] = 0;
   out_5841156096795956421[26] = 0;
   out_5841156096795956421[27] = 0;
   out_5841156096795956421[28] = 0;
   out_5841156096795956421[29] = 0;
   out_5841156096795956421[30] = 0;
   out_5841156096795956421[31] = 0;
   out_5841156096795956421[32] = 0;
   out_5841156096795956421[33] = 1;
   out_5841156096795956421[34] = 0;
   out_5841156096795956421[35] = 0;
   out_5841156096795956421[36] = 0;
   out_5841156096795956421[37] = 0;
   out_5841156096795956421[38] = 0;
   out_5841156096795956421[39] = 0;
   out_5841156096795956421[40] = 0;
   out_5841156096795956421[41] = 0;
   out_5841156096795956421[42] = 0;
   out_5841156096795956421[43] = 0;
   out_5841156096795956421[44] = 0;
   out_5841156096795956421[45] = 0;
   out_5841156096795956421[46] = 0;
   out_5841156096795956421[47] = 0;
   out_5841156096795956421[48] = 0;
   out_5841156096795956421[49] = 0;
   out_5841156096795956421[50] = 0;
   out_5841156096795956421[51] = 0;
   out_5841156096795956421[52] = 0;
   out_5841156096795956421[53] = 0;
   out_5841156096795956421[54] = 0;
   out_5841156096795956421[55] = 0;
   out_5841156096795956421[56] = 1;
   out_5841156096795956421[57] = 0;
   out_5841156096795956421[58] = 0;
   out_5841156096795956421[59] = 0;
   out_5841156096795956421[60] = 0;
   out_5841156096795956421[61] = 0;
   out_5841156096795956421[62] = 0;
   out_5841156096795956421[63] = 0;
   out_5841156096795956421[64] = 0;
   out_5841156096795956421[65] = 0;
}
void h_33(double *state, double *unused, double *out_3949779056430118567) {
   out_3949779056430118567[0] = state[16];
   out_3949779056430118567[1] = state[17];
   out_3949779056430118567[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6611155970048938911) {
   out_6611155970048938911[0] = 0;
   out_6611155970048938911[1] = 0;
   out_6611155970048938911[2] = 0;
   out_6611155970048938911[3] = 0;
   out_6611155970048938911[4] = 0;
   out_6611155970048938911[5] = 0;
   out_6611155970048938911[6] = 0;
   out_6611155970048938911[7] = 0;
   out_6611155970048938911[8] = 0;
   out_6611155970048938911[9] = 0;
   out_6611155970048938911[10] = 0;
   out_6611155970048938911[11] = 0;
   out_6611155970048938911[12] = 0;
   out_6611155970048938911[13] = 0;
   out_6611155970048938911[14] = 0;
   out_6611155970048938911[15] = 0;
   out_6611155970048938911[16] = 1;
   out_6611155970048938911[17] = 0;
   out_6611155970048938911[18] = 0;
   out_6611155970048938911[19] = 0;
   out_6611155970048938911[20] = 0;
   out_6611155970048938911[21] = 0;
   out_6611155970048938911[22] = 0;
   out_6611155970048938911[23] = 0;
   out_6611155970048938911[24] = 0;
   out_6611155970048938911[25] = 0;
   out_6611155970048938911[26] = 0;
   out_6611155970048938911[27] = 0;
   out_6611155970048938911[28] = 0;
   out_6611155970048938911[29] = 0;
   out_6611155970048938911[30] = 0;
   out_6611155970048938911[31] = 0;
   out_6611155970048938911[32] = 0;
   out_6611155970048938911[33] = 0;
   out_6611155970048938911[34] = 0;
   out_6611155970048938911[35] = 0;
   out_6611155970048938911[36] = 0;
   out_6611155970048938911[37] = 0;
   out_6611155970048938911[38] = 0;
   out_6611155970048938911[39] = 1;
   out_6611155970048938911[40] = 0;
   out_6611155970048938911[41] = 0;
   out_6611155970048938911[42] = 0;
   out_6611155970048938911[43] = 0;
   out_6611155970048938911[44] = 0;
   out_6611155970048938911[45] = 0;
   out_6611155970048938911[46] = 0;
   out_6611155970048938911[47] = 0;
   out_6611155970048938911[48] = 0;
   out_6611155970048938911[49] = 0;
   out_6611155970048938911[50] = 0;
   out_6611155970048938911[51] = 0;
   out_6611155970048938911[52] = 0;
   out_6611155970048938911[53] = 0;
   out_6611155970048938911[54] = 0;
   out_6611155970048938911[55] = 0;
   out_6611155970048938911[56] = 0;
   out_6611155970048938911[57] = 0;
   out_6611155970048938911[58] = 0;
   out_6611155970048938911[59] = 0;
   out_6611155970048938911[60] = 0;
   out_6611155970048938911[61] = 0;
   out_6611155970048938911[62] = 1;
   out_6611155970048938911[63] = 0;
   out_6611155970048938911[64] = 0;
   out_6611155970048938911[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4686531166020845656) {
  H(in_vec, out_4686531166020845656);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5460360781474494139) {
  err_fun(nom_x, delta_x, out_5460360781474494139);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1058204392407215823) {
  inv_err_fun(nom_x, true_x, out_1058204392407215823);
}
void live_H_mod_fun(double *state, double *out_2613468595030008435) {
  H_mod_fun(state, out_2613468595030008435);
}
void live_f_fun(double *state, double dt, double *out_5656405977393980005) {
  f_fun(state,  dt, out_5656405977393980005);
}
void live_F_fun(double *state, double dt, double *out_4808132447777396135) {
  F_fun(state,  dt, out_4808132447777396135);
}
void live_h_4(double *state, double *unused, double *out_6909017026966328284) {
  h_4(state, unused, out_6909017026966328284);
}
void live_H_4(double *state, double *unused, double *out_5318369041649147725) {
  H_4(state, unused, out_5318369041649147725);
}
void live_h_9(double *state, double *unused, double *out_4067103874151876147) {
  h_9(state, unused, out_4067103874151876147);
}
void live_H_9(double *state, double *unused, double *out_5841156096795956421) {
  H_9(state, unused, out_5841156096795956421);
}
void live_h_10(double *state, double *unused, double *out_878258855426047000) {
  h_10(state, unused, out_878258855426047000);
}
void live_H_10(double *state, double *unused, double *out_4001703992801318308) {
  H_10(state, unused, out_4001703992801318308);
}
void live_h_12(double *state, double *unused, double *out_4904646255259357299) {
  h_12(state, unused, out_4904646255259357299);
}
void live_H_12(double *state, double *unused, double *out_8108918624028442096) {
  H_12(state, unused, out_8108918624028442096);
}
void live_h_35(double *state, double *unused, double *out_3108800339151075316) {
  h_35(state, unused, out_3108800339151075316);
}
void live_H_35(double *state, double *unused, double *out_8685031099021755101) {
  H_35(state, unused, out_8685031099021755101);
}
void live_h_32(double *state, double *unused, double *out_7089824626637357349) {
  h_32(state, unused, out_7089824626637357349);
}
void live_H_32(double *state, double *unused, double *out_5675977286590873415) {
  H_32(state, unused, out_5675977286590873415);
}
void live_h_13(double *state, double *unused, double *out_8589596162138588498) {
  h_13(state, unused, out_8589596162138588498);
}
void live_H_13(double *state, double *unused, double *out_1342061494263837266) {
  H_13(state, unused, out_1342061494263837266);
}
void live_h_14(double *state, double *unused, double *out_4067103874151876147) {
  h_14(state, unused, out_4067103874151876147);
}
void live_H_14(double *state, double *unused, double *out_5841156096795956421) {
  H_14(state, unused, out_5841156096795956421);
}
void live_h_33(double *state, double *unused, double *out_3949779056430118567) {
  h_33(state, unused, out_3949779056430118567);
}
void live_H_33(double *state, double *unused, double *out_6611155970048938911) {
  H_33(state, unused, out_6611155970048938911);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
